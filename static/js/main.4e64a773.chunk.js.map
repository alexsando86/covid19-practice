{"version":3,"sources":["component/Header.module.css","component/pages/NatInfoState.module.css","ColorModeSwitcher.tsx","component/Header.tsx","component/Footer.tsx","component/Layout.tsx","component/chart/CovidTotalState.tsx","asyncGetData.ts","redux/covid19InfooReducer.ts","component/SpinnerBox.tsx","component/pages/Covid19State.tsx","component/chart/SidoInfoStateChart.tsx","redux/sidoInfoReducer.ts","component/pages/SidoInfoState.tsx","component/chart/GenAgeCaseInfoChart.tsx","redux/genAgeCaseInfoReducer.ts","component/pages/GenAgeCaseInfo.tsx","redux/overseasReducer.ts","component/chart/NatInfoStateChart.tsx","component/pages/NatInfoState.tsx","App.tsx","redux/reducers.ts","redux/index.ts","index.tsx"],"names":["module","exports","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","Header","className","styles","nav","justifyContent","alignItems","flexDirection","md","covid19","src","alt","width","to","Footer","p","align","style","display","href","target","rel","Layout","children","title","as","minChildWidth","gap","w","h","overflow","Array","map","child","index","boxShadow","CovidTotalState","covid19InfooReducer","STATE_DT","item","stateDt","sort","a","b","slice","DECIDE_CNT","decideCnt","data","labels","date","toString","substring","datasets","label","backgroundColor","borderColor","borderWidth","lineGraph","ticksColor","options","plugins","legend","scales","xAxis","grid","ticks","yAxis","maintainAspectRatio","dotenv","config","console","log","process","today","Date","year","getFullYear","month","getMonth","month2","getDate","yesterday","getToday","getYesterday","queryParams","encodeURIComponent","fetchAPI","url","axios","method","then","response","body","items","catch","error","createPromiseThunk","type","name","setLoadingState","dispatch","payload","COVID19INFO_PENDING","COVID19INFO_SUCCESS","covid19InfoDispatch","initialState","accDefRate","accExamCnt","accExamCompCnt","careCnt","clearCnt","createDt","deathCnt","examCnt","resutlNegCnt","seq","stateTime","updateDt","covid19InfoData","state","action","SpinnerBox","position","left","right","top","bottom","background","opacity","thickness","speed","emptyColor","Covid19State","useSelector","sidoInfoReducer","Number","moment","format","useDispatch","useState","isLoading","setIsLoading","useEffect","DECIDE_CNT_TODAY","reverse","CONFIRMED_CASE","find","YESTERDAY_CONFIRMED_CASE","TODAY_CONFIRMED_CASE","mb","flex","isNaN","toLocaleString","toFixed","SidoInfoStateChart","DEF_CNT","GUBUN","colorArray","randomColor","Math","floor","random","count","i","push","setRgbaColor","length","filter","filItem","gubun","defCnt","barData","barOptions","templateRows","SIDOINFO_SUCCESS","sidoInfoDispatch","gubunCn","gubunEn","incDec","isolClearCnt","isolIngCnt","localOccCnt","overFlowCnt","qurRate","stdDay","getSIDOINFOData","currentDay","day","city","GenAgeCaseInfoChart","CREACT_DT","CONF_CASE","conf","confCase","CONF_CASE_RATE","confCaseRate","ctg","indexAxis","lineData","GENAGECASEINFO_SUCCESS","genAgeCaseInfoDispatch","criticalRate","death","deathRate","genAgeCaseInfoData","GenAgeCaseInfo","genAgeCaseInfoReducer","genAge","genAgeType","indexOf","OVERSEAS_SUCCESS","overseasDispatch","areaNm","areaNmCn","areaNmEn","natDeathCnt","natDeathRate","natDefCnt","nationNm","nationNmCn","nationNmEn","getOverseasData","NatInfoStateChart","NATIONAL","CREATE_DT","NATIONAL_DATA","NATIONAL_NAME","axis","fill","NatInfoState","overseasReducer","overflowY","special","App","theme","px","borderBottomWidth","path","exact","component","SidoInfoState","RootReducer","combineReducers","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e64a773.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__2PsrS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"special\":\"NatInfoState_special__3V9hF\"};","import * as React from \"react\"\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from \"@chakra-ui/react\"\nimport { FaMoon, FaSun } from \"react-icons/fa\"\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode()\n  const text = useColorModeValue(\"dark\", \"light\")\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  )\n}\n","import React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Header.module.css\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Flex className={styles.nav} justifyContent=\"space-between\" alignItems=\"center\" flexDirection={{ md: \"row\" }} fontSize={{ md: \"15px\" }}>\r\n\t\t\t\t<img className={styles.covid19} src=\"./images/alex.jpg\" alt=\"alex\" width=\"60px\" />\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"/\">코로나19 감염 현황</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"/SidoInfoState\">시·도발생 현황</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"/GenAgeCaseInfo\">연령별·성별감염 현황</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"/NatInfoState\">해외발생 현황</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</nav>\r\n\t\t\t</Flex>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { Box } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nconst Footer = () => {\n\treturn (\n\t\t<Box p={4} align=\"center\" style={{ display: \"none\" }} display={{ md: \"block !important\" }}>\n\t\t\t제공: 공공데이터포털 (\n\t\t\t<a href=\"https://www.data.go.kr/index.do\" target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\thttps://www.data.go.kr/index.do\n\t\t\t</a>\n\t\t\t)<p>Copyright © alexsando. All Rights Reserved.</p>\n\t\t</Box>\n\t);\n};\n\nexport default Footer;\n","import React from \"react\";\r\nimport { Box, Flex, Grid, Heading, SimpleGrid } from \"@chakra-ui/react\";\r\n\r\ninterface childrenProps {\r\n\tchildren: JSX.Element[] | JSX.Element;\r\n\ttitle: string;\r\n}\r\n\r\nconst Layout = ({ children, title }: childrenProps) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Heading as=\"h2\" size=\"md\" p={4}>\r\n\t\t\t\t{title}\r\n\t\t\t</Heading>\r\n\t\t\t<SimpleGrid minChildWidth=\"375px\" gap={6} w=\"100%\" h=\"100%\" p={4} overflow={{ md: \"hidden\" }}>\r\n\t\t\t\t{children instanceof Array &&\r\n\t\t\t\t\tchildren.map((child, index) => (\r\n\t\t\t\t\t\t<Flex alignItems=\"center\" key={index} w=\"100%\" h=\"100%\" p={4} boxShadow=\"base\" overflow={{ md: \"hidden\" }}>\r\n\t\t\t\t\t\t\t{child}\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t))}\r\n\t\t\t</SimpleGrid>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Layout;\r\n","import { useColorModeValue } from \"@chakra-ui/react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst CovidTotalState = ({ covid19InfooReducer }: any) => {\r\n\tconst STATE_DT =\r\n\t\tcovid19InfooReducer &&\r\n\t\tcovid19InfooReducer\r\n\t\t\t.map((item: any) => item.stateDt)\r\n\t\t\t.sort((a: number, b: number) => a - b)\r\n\t\t\t.slice(-15);\r\n\r\n\tconst DECIDE_CNT =\r\n\t\tcovid19InfooReducer &&\r\n\t\tcovid19InfooReducer\r\n\t\t\t.map((item: any) => item.decideCnt)\r\n\t\t\t.sort((a: number, b: number) => a - b)\r\n\t\t\t.slice(-15);\r\n\r\n\ttype dataTypes = {\r\n\t\tlabels: string[];\r\n\t\tdatasets: {\r\n\t\t\tlabel: string;\r\n\t\t\tdata: number[];\r\n\t\t\tbackgroundColor: string[];\r\n\t\t\tborderColor: string[];\r\n\t\t\tborderWidth: number;\r\n\t\t}[];\r\n\t};\r\n\r\n\tconst data: dataTypes = {\r\n\t\tlabels: STATE_DT && STATE_DT.map((date: number): string => `${date.toString().slice(4).substring(0, 2)}/${date.toString().slice(4).substring(2)}`),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"누적 확진자수\",\r\n\t\t\t\tdata: DECIDE_CNT,\r\n\t\t\t\tbackgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\r\n\t\t\t\tborderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst lineGraph = useColorModeValue(\"rgba(229, 229, 229)\", \"rgba(255,255,255,0.5)\");\r\n\tconst ticksColor = useColorModeValue(\"gray.200\", \"#fff\");\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\t// display: false,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\txAxis: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\t// responsive: false,\r\n\t\tmaintainAspectRatio: false, // false로 설정 시 사용자 정의 크기에 따라 그래프 크기가 결정됨.\r\n\t};\r\n\r\n\treturn <Line data={data} options={options} />;\r\n};\r\n\r\nexport default CovidTotalState;\r\n","import axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\nconsole.log(process.env.NODE_ENV);\r\n\r\nconst today: Date = new Date();\r\nconst year = today.getFullYear(); // 년도\r\nconst month = (\"0\" + (today.getMonth() + 1)).slice(-2); // 월\r\nconst month2 = (\"0\" + today.getMonth()).slice(-2); // 전월\r\nconst date = (\"0\" + today.getDate()).slice(-2);\r\nconst yesterday = (\"0\" + (today.getDate() - 1)).slice(-2);\r\n\r\nconst getToday: string = `${year}${month}${date}`;\r\nconst getYesterday: string = `${year}${month2}${yesterday}`;\r\n\r\nconst SERVICE_KEY: string | undefined = process.env.REACT_APP_SERVICE_KEY;\r\n\r\nlet queryParams = \"?\" + encodeURIComponent(\"ServiceKey\") + \"=\" + SERVICE_KEY; /*Service Key*/\r\nqueryParams += \"&\" + encodeURIComponent(\"pageNo\") + \"=\" + encodeURIComponent(\"1\"); /* 페이지번호*/\r\nqueryParams += \"&\" + encodeURIComponent(\"numOfRows\") + \"=\" + encodeURIComponent(\"10\"); /* 한 페이지 결과 수 */\r\nqueryParams += \"&\" + encodeURIComponent(\"startCreateDt\") + \"=\" + encodeURIComponent(getYesterday); /* 검색할 생성일 시작 */\r\nqueryParams += \"&\" + encodeURIComponent(\"endCreateDt\") + \"=\" + encodeURIComponent(getToday); /* 검색할 생성일 종료 */\r\n\r\nconst fetchAPI = async (url: string) => {\r\n\treturn await axios({\r\n\t\tmethod: \"GET\",\r\n\t\turl: process.env.NODE_ENV === \"development\" ? `/openapi/service/rest/Covid19/${url + queryParams}` : `https://cors.bridged.cc/http://openapi.data.go.kr/openapi/service/rest/Covid19/${url + queryParams}`,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tresponse: {\r\n\t\t\t\t\t\tbody: {\r\n\t\t\t\t\t\t\titems: { item },\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t} = response;\r\n\t\t\treturn item;\r\n\t\t})\r\n\t\t.catch((error) => console.log(error));\r\n};\r\n\r\nexport const createPromiseThunk = (type: string) => {\r\n\tlet name: string = \"\";\r\n\tswitch (type) {\r\n\t\tcase \"OVERSEAS\":\r\n\t\t\tname = \"해외발생 현황\";\r\n\t\t\tbreak;\r\n\t\tcase \"SIDOINFO\":\r\n\t\t\tname = \"시·도발생 현황\";\r\n\t\t\tbreak;\r\n\t\tcase \"COVID19INFO\":\r\n\t\t\tname = \"감염 현황\";\r\n\t\t\tbreak;\r\n\t\tcase \"GENAGECASEINFO\":\r\n\t\t\tname = \"연령별·성별감염 현황\";\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\treturn ({ url, setLoadingState }: { url: string; setLoadingState?: any }) =>\r\n\t\tasync (dispatch: any): Promise<void> => {\r\n\t\t\ttry {\r\n\t\t\t\tconst payload = await fetchAPI(url);\r\n\t\t\t\tdispatch({ type: `${type}_SUCCESS`, payload });\r\n\t\t\t\tsetLoadingState && setLoadingState(false);\r\n\t\t\t\tconsole.log(`${name}: ${type}`, payload);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t};\r\n};\r\n","import { createPromiseThunk } from \"../asyncGetData\";\r\n\r\nconst COVID19INFO = \"COVID19INFO\";\r\nconst COVID19INFO_PENDING = \"COVID19INFO_PENDING\";\r\nconst COVID19INFO_SUCCESS = \"COVID19INFO_SUCCESS\";\r\n\r\nexport const covid19InfoDispatch: any = createPromiseThunk(COVID19INFO);\r\n\r\nexport type covid19InfoTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\taccDefRate: number;\r\n\t\t\taccExamCnt: number;\r\n\t\t\taccExamCompCnt: number;\r\n\t\t\tcareCnt: number;\r\n\t\t\tclearCnt: number;\r\n\t\t\tcreateDt: string;\r\n\t\t\tdeathCnt: number;\r\n\t\t\tdecideCnt: number;\r\n\t\t\texamCnt: number;\r\n\t\t\tresutlNegCnt: number;\r\n\t\t\tseq: number;\r\n\t\t\tstateDt: number;\r\n\t\t\tstateTime: string;\r\n\t\t\tupdateDt: string;\r\n\t\t}\r\n\t];\r\n};\r\n\r\nconst initialState: covid19InfoTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\taccDefRate: 0,\r\n\t\t\taccExamCnt: 0,\r\n\t\t\taccExamCompCnt: 0,\r\n\t\t\tcareCnt: 0,\r\n\t\t\tclearCnt: 0,\r\n\t\t\tcreateDt: \"\",\r\n\t\t\tdeathCnt: 0,\r\n\t\t\tdecideCnt: 0,\r\n\t\t\texamCnt: 0,\r\n\t\t\tresutlNegCnt: 0,\r\n\t\t\tseq: 0,\r\n\t\t\tstateDt: 0,\r\n\t\t\tstateTime: \"\",\r\n\t\t\tupdateDt: \"\",\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst covid19InfoData = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase COVID19INFO_PENDING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t};\r\n\t\tcase COVID19INFO_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default covid19InfoData;\r\n","import React from \"react\";\nimport { Flex, Spinner } from \"@chakra-ui/react\";\n\nconst SpinnerBox = () => {\n\treturn (\n\t\t<Flex justifyContent=\"center\" alignItems=\"center\" position=\"fixed\" left=\"0\" right=\"0\" top=\"0\" bottom=\"0\" background=\"gray.500\" opacity=\"0.7\">\n\t\t\t<Spinner thickness=\"4px\" speed=\"0.65s\" emptyColor=\"gray.200\" color=\"red.500\" size=\"xl\" />\n\t\t</Flex>\n\t);\n};\n\nexport default SpinnerBox;\n","import React, { useEffect, useState } from \"react\";\nimport { Flex, Table, Thead, Tbody, Tr, Th, Td, TableCaption, Heading } from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Layout from \"../Layout\";\nimport moment from \"moment\";\nimport CovidTotalState from \"../chart/CovidTotalState\";\nimport { covid19InfoDispatch } from \"../../redux/covid19InfooReducer\";\nimport SpinnerBox from \"../SpinnerBox\";\nimport { sidoItemTypes } from \"./SidoInfoState\";\n\nconst Covid19State = () => {\n\tconst { covid19InfooReducer, sidoInfoReducer } = useSelector((state: any) => ({\n\t\tcovid19InfooReducer: state.covid19InfooReducer.data,\n\t\tsidoInfoReducer: state.sidoInfoReducer.data,\n\t}));\n\n\tconst DEF_CNT = sidoInfoReducer\n\t\t?.map((item: sidoItemTypes) => item)\n\t\t.sort((a: any, b: any) => Number(moment(a.createDt).format(\"YYYYMMDD\")) - Number(moment(b.createDt).format(\"YYYYMMDD\")))\n\t\t.slice(-18);\n\n\tconst dispatch = useDispatch();\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst setLoadingState = (state: boolean) => {\n\t\tsetIsLoading(state);\n\t};\n\n\tuseEffect(() => {\n\t\t// 코로나19 감염 현황\n\t\tdispatch(\n\t\t\tcovid19InfoDispatch({\n\t\t\t\turl: \"getCovid19InfStateJson\",\n\t\t\t\tsetLoadingState,\n\t\t\t})\n\t\t);\n\t}, []);\n\n\t// stateDt기준 데이터정렬 가공\n\tconst DECIDE_CNT_TODAY =\n\t\tcovid19InfooReducer &&\n\t\tcovid19InfooReducer\n\t\t\t.map((item: any) => item)\n\t\t\t.sort((a: any, b: any) => a.stateDt - b.stateDt)\n\t\t\t.slice(-15)\n\t\t\t.reverse();\n\n\t// 오늘확진자 수\n\tconst CONFIRMED_CASE = DECIDE_CNT_TODAY?.find((item: { stateDt: number }) => item.stateDt.toString() === moment(new Date()).format(\"YYYYMMDD\"));\n\tconst YESTERDAY_CONFIRMED_CASE = DECIDE_CNT_TODAY?.find((item: { stateDt: number }) => item.stateDt.toString() === (Number(moment(new Date()).format(\"YYYYMMDD\")) - 1).toString());\n\tconst TODAY_CONFIRMED_CASE = CONFIRMED_CASE?.decideCnt - YESTERDAY_CONFIRMED_CASE?.decideCnt;\n\n\treturn (\n\t\t<>\n\t\t\t{isLoading && <SpinnerBox />}\n\t\t\t{!isLoading && (\n\t\t\t\t<Layout title=\"공공데이터활용지원센터_보건복지부 코로나19 감염 현황\">\n\t\t\t\t\t<CovidTotalState covid19InfooReducer={covid19InfooReducer && covid19InfooReducer} />\n\t\t\t\t\t<Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\n\t\t\t\t\t\t<Heading size=\"md\" mb={4}>\n\t\t\t\t\t\t\t누적 데이터\n\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t<Table variant=\"striped\" size=\"sm\" flex=\"1\">\n\t\t\t\t\t\t\t<TableCaption fontSize=\"md\">{isNaN(TODAY_CONFIRMED_CASE) ? \"10시 이후 오늘의 확진자 수 확인 가능합니다.\" : `오늘 확진자 수 : ${TODAY_CONFIRMED_CASE.toLocaleString()}명`}</TableCaption>\n\t\t\t\t\t\t\t<Thead>\n\t\t\t\t\t\t\t\t<Tr>\n\t\t\t\t\t\t\t\t\t<Th>기준일</Th>\n\t\t\t\t\t\t\t\t\t<Th>확진자 수</Th>\n\t\t\t\t\t\t\t\t\t<Th>격리해제 수</Th>\n\t\t\t\t\t\t\t\t\t<Th>치료중 환자 수</Th>\n\t\t\t\t\t\t\t\t\t<Th>사망자 수</Th>\n\t\t\t\t\t\t\t\t\t<Th>확진률</Th>\n\t\t\t\t\t\t\t\t</Tr>\n\t\t\t\t\t\t\t</Thead>\n\t\t\t\t\t\t\t<Tbody>\n\t\t\t\t\t\t\t\t{DECIDE_CNT_TODAY &&\n\t\t\t\t\t\t\t\t\tDECIDE_CNT_TODAY.map((item: any) => (\n\t\t\t\t\t\t\t\t\t\t<Tr key={item.stateDt}>\n\t\t\t\t\t\t\t\t\t\t\t<Td>{moment(item.stateDt.toString()).format(\"YYYY-MM-DD\")}</Td>\n\t\t\t\t\t\t\t\t\t\t\t<Td>{item.decideCnt.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t\t<Td>{item.clearCnt.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t\t<Td>{item.careCnt.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t\t<Td>{item.deathCnt.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t\t<Td>{Number(item.accDefRate).toFixed(2)}</Td>\n\t\t\t\t\t\t\t\t\t\t</Tr>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Tbody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</Flex>\n\t\t\t\t</Layout>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Covid19State;\n","import React from \"react\";\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport { Box, Grid, useColorModeValue } from \"@chakra-ui/react\";\n\nconst SidoInfoStateChart = ({ DEF_CNT, GUBUN }: any) => {\n\ttype itemTypes = {\n\t\tcreateDt: string;\n\t\tdeathCnt: number;\n\t\tdefCnt: number;\n\t\tgubun: string;\n\t\tgubunCn: string;\n\t\tgubunEn: string;\n\t\tincDec: number;\n\t\tisolClearCnt: number;\n\t\tisolIngCnt: number;\n\t\tlocalOccCnt: number;\n\t\toverFlowCnt: number;\n\t\tqurRate: string;\n\t\tseq: number;\n\t\tstdDay: string;\n\t};\n\n\t// Random Color\n\tlet colorArray: string[] = [];\n\tconst randomColor = () => Math.floor(Math.random() * 255);\n\tconst setRgbaColor = (count: number) => {\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tcolorArray.push(`rgba(${randomColor()},${randomColor()},${randomColor()}, 0.7)`);\n\t\t}\n\t};\n\tsetRgbaColor(DEF_CNT?.length);\n\n\ttype dataTypes = {\n\t\tlabels: string[];\n\t\tdatasets: {\n\t\t\tlabel: string[] | string;\n\t\t\tdata: number[];\n\t\t\tbackgroundColor: string[];\n\t\t\tborderWidth: number;\n\t\t}[];\n\t};\n\n\tconst data: dataTypes = {\n\t\tlabels: GUBUN,\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: GUBUN,\n\t\t\t\tdata: DEF_CNT?.filter((filItem: itemTypes) => filItem.gubun !== \"합계\").map((item: itemTypes) => item.defCnt),\n\t\t\t\tbackgroundColor: colorArray,\n\t\t\t\tborderWidth: 1,\n\t\t\t},\n\t\t],\n\t};\n\n\tconst lineGraph = useColorModeValue(\"rgba(229, 229, 229)\", \"rgba(255,255,255,0.5)\");\n\tconst ticksColor = useColorModeValue(\"gray.200\", \"#fff\");\n\n\tconst options = {\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\t// display: false,\n\t\t\t\tlabels: {\n\t\t\t\t\tcolor: ticksColor,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tscales: {\n\t\t\txAxis: {\n\t\t\t\tgrid: {\n\t\t\t\t\tborderColor: lineGraph,\n\t\t\t\t\tcolor: lineGraph,\n\t\t\t\t},\n\t\t\t\tticks: {\n\t\t\t\t\tcolor: ticksColor,\n\t\t\t\t},\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\tgrid: {\n\t\t\t\t\tborderColor: lineGraph,\n\t\t\t\t\tcolor: lineGraph,\n\t\t\t\t},\n\t\t\t\tticks: {\n\t\t\t\t\tcolor: ticksColor,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tmaintainAspectRatio: false,\n\t};\n\n\tconst barData: dataTypes = {\n\t\tlabels: GUBUN,\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: \"지역별 현황\",\n\t\t\t\tdata: DEF_CNT?.filter((filItem: itemTypes) => filItem.gubun !== \"합계\").map((item: itemTypes) => item.defCnt),\n\t\t\t\tbackgroundColor: colorArray,\n\t\t\t\tborderWidth: 1,\n\t\t\t},\n\t\t],\n\t};\n\n\tconst barOptions = {\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: false, // label 숨기기\n\t\t\t},\n\t\t},\n\t\tscales: {\n\t\t\txAxis: {\n\t\t\t\tgrid: {\n\t\t\t\t\tborderColor: lineGraph,\n\t\t\t\t\tcolor: lineGraph,\n\t\t\t\t},\n\t\t\t\tticks: {\n\t\t\t\t\tcolor: ticksColor,\n\t\t\t\t},\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\tticks: {\n\t\t\t\t\tcolor: ticksColor,\n\t\t\t\t},\n\t\t\t\tgrid: {\n\t\t\t\t\tborderColor: lineGraph,\n\t\t\t\t\tcolor: lineGraph,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tmaintainAspectRatio: false,\n\t};\n\n\treturn (\n\t\t<Grid templateRows=\"repeat(2,1fr)\" w=\"100%\" h=\"100%\">\n\t\t\t<Box p={4}>\n\t\t\t\t<Doughnut data={data} options={options} />\n\t\t\t</Box>\n\t\t\t<Box p={4}>\n\t\t\t\t<Bar data={barData} options={barOptions} />\n\t\t\t</Box>\n\t\t</Grid>\n\t);\n};\n\nexport default SidoInfoStateChart;\n","import { createPromiseThunk } from \"../asyncGetData\";\r\n\r\nconst SIDOINFO = \"SIDOINFO\";\r\nconst SIDOINFO_SUCCESS = \"SIDOINFO_SUCCESS\";\r\n\r\nexport const sidoInfoDispatch: any = createPromiseThunk(SIDOINFO);\r\n\r\ntype sidoDataTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\tcreateDt: string;\r\n\t\t\tdeathCnt: number;\r\n\t\t\tdefCnt: number;\r\n\t\t\tgubun: string;\r\n\t\t\tgubunCn: string;\r\n\t\t\tgubunEn: string;\r\n\t\t\tincDec: number;\r\n\t\t\tisolClearCnt: number;\r\n\t\t\tisolIngCnt: number;\r\n\t\t\tlocalOccCnt: number;\r\n\t\t\toverFlowCnt: number;\r\n\t\t\tqurRate: string;\r\n\t\t\tseq: number;\r\n\t\t\tstdDay: string;\r\n\t\t\tupdateDt: string;\r\n\t\t}\r\n\t];\r\n};\r\n\r\nconst initialState: sidoDataTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\tcreateDt: \"\",\r\n\t\t\tdeathCnt: 0,\r\n\t\t\tdefCnt: 0,\r\n\t\t\tgubun: \"\",\r\n\t\t\tgubunCn: \"\",\r\n\t\t\tgubunEn: \"\",\r\n\t\t\tincDec: 0,\r\n\t\t\tisolClearCnt: 0,\r\n\t\t\tisolIngCnt: 0,\r\n\t\t\tlocalOccCnt: 0,\r\n\t\t\toverFlowCnt: 0,\r\n\t\t\tqurRate: \"\",\r\n\t\t\tseq: 0,\r\n\t\t\tstdDay: \"\",\r\n\t\t\tupdateDt: \"\",\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst getSIDOINFOData = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase SIDOINFO_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default getSIDOINFOData;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Flex, Table, Thead, Tbody, Tr, Th, Td, TableCaption, Heading } from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Layout from \"../Layout\";\nimport moment from \"moment\";\nimport SidoInfoStateChart from \"../chart/SidoInfoStateChart\";\nimport { sidoInfoDispatch } from \"../../redux/sidoInfoReducer\";\nimport SpinnerBox from \"../SpinnerBox\";\n\nexport type sidoItemTypes = {\n\tcreateDt: string;\n\tdeathCnt: number;\n\tdefCnt: number;\n\tgubun: string;\n\tgubunCn: string;\n\tgubunEn: string;\n\tincDec: number;\n\tisolClearCnt: number;\n\tisolIngCnt: number;\n\tlocalOccCnt: number;\n\toverFlowCnt: number;\n\tqurRate: string;\n\tseq: number;\n\tstdDay: string;\n};\n\nconst Covid19State = () => {\n\tconst { sidoInfoReducer } = useSelector((state: any) => ({ sidoInfoReducer: state.sidoInfoReducer.data }));\n\n\tconst DEF_CNT = sidoInfoReducer\n\t\t?.map((item: sidoItemTypes) => item)\n\t\t.sort((a: any, b: any) => Number(moment(a.createDt).format(\"YYYYMMDD\")) - Number(moment(b.createDt).format(\"YYYYMMDD\")))\n\t\t.slice(-18);\n\n\t// 도시명\n\tconst GUBUN = DEF_CNT?.filter((filItem: sidoItemTypes) => filItem.gubun !== \"합계\").map((item: sidoItemTypes) => item.gubun);\n\n\t// 기준날짜\n\tconst currentDay = DEF_CNT?.find((day: { createDt: string }) => moment(day.createDt).format(\"YYYYMMDD\"));\n\n\tconst dispatch = useDispatch();\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst setLoadingState = (state: boolean) => {\n\t\tsetIsLoading(state);\n\t};\n\n\tuseEffect(() => {\n\t\t// 코로나19 시·도발생 현황\n\t\tdispatch(\n\t\t\tsidoInfoDispatch({\n\t\t\t\turl: \"getCovid19SidoInfStateJson\",\n\t\t\t\tsetLoadingState,\n\t\t\t})\n\t\t);\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{isLoading && <SpinnerBox />}\n\t\t\t{!isLoading && (\n\t\t\t\t<Layout title=\"공공데이터활용지원센터_보건복지부 코로나19 시·도발생 현황\">\n\t\t\t\t\t<SidoInfoStateChart DEF_CNT={DEF_CNT} GUBUN={GUBUN} isLoading={isLoading} sidoInfoReducer={sidoInfoReducer && sidoInfoReducer} />\n\t\t\t\t\t<Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\n\t\t\t\t\t\t<Heading size=\"md\" mb={4}>\n\t\t\t\t\t\t\t시·도발생 현황\n\t\t\t\t\t\t</Heading>\n\n\t\t\t\t\t\t<Table variant=\"striped\" size=\"sm\" w=\"100%\" h=\"100%\" flex=\"1\">\n\t\t\t\t\t\t\t<TableCaption fontSize=\"md\">{`${moment(currentDay?.createDt).format(\"YYYY-MM-DD\")}`}</TableCaption>\n\t\t\t\t\t\t\t<Thead>\n\t\t\t\t\t\t\t\t<Tr>\n\t\t\t\t\t\t\t\t\t<Th>도시명</Th>\n\t\t\t\t\t\t\t\t\t<Th>확진자 수</Th>\n\t\t\t\t\t\t\t\t\t<Th>격리중 환자수</Th>\n\t\t\t\t\t\t\t\t\t<Th>격리 해제 수</Th>\n\t\t\t\t\t\t\t\t\t<Th>전일대비 증감 수</Th>\n\t\t\t\t\t\t\t\t\t<Th>해외유입 수</Th>\n\t\t\t\t\t\t\t\t\t<Th>지역발생 수</Th>\n\t\t\t\t\t\t\t\t</Tr>\n\t\t\t\t\t\t\t</Thead>\n\t\t\t\t\t\t\t<Tbody>\n\t\t\t\t\t\t\t\t{DEF_CNT?.map((city: sidoItemTypes) => (\n\t\t\t\t\t\t\t\t\t<Tr key={city.gubun}>\n\t\t\t\t\t\t\t\t\t\t<Td>{city.gubun.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t<Td>{city.defCnt.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t<Td>{city.isolIngCnt.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t<Td>{city.isolClearCnt.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t<Td>{city.incDec.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t<Td>{city.overFlowCnt.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t<Td>{city.localOccCnt.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t</Tr>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Tbody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</Flex>\n\t\t\t\t</Layout>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Covid19State;\n","import { Box, Grid, useColorModeValue } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nconst GenAgeCaseInfoChart = ({ CREACT_DT }: any) => {\r\n\tconst CONF_CASE = CREACT_DT.map((conf: { confCase: number }) => conf.confCase);\r\n\tconst CONF_CASE_RATE = CREACT_DT.map((conf: { confCaseRate: number }) => conf.confCaseRate);\r\n\tconst GUBUN = CREACT_DT.map((ctg: { gubun: string }) => ctg.gubun);\r\n\r\n\tconst lineGraph = useColorModeValue(\"rgba(229, 229, 229)\", \"rgba(255,255,255,0.5)\");\r\n\tconst ticksColor = useColorModeValue(\"gray.200\", \"#fff\");\r\n\r\n\tconst data = {\r\n\t\tlabels: GUBUN,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"확진자\",\r\n\t\t\t\tdata: CONF_CASE,\r\n\t\t\t\tbackgroundColor: [\"rgb(255, 99, 132)\", \"rgb(75, 192, 192)\", \"rgb(255, 205, 86)\", \"rgb(201, 203, 207)\", \"rgb(54, 162, 235)\"],\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tindexAxis: \"y\",\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\txAxis: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tmaintainAspectRatio: false,\r\n\t};\r\n\r\n\tconst lineData = {\r\n\t\tlabels: GUBUN,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"확진률\",\r\n\t\t\t\tdata: CONF_CASE_RATE,\r\n\t\t\t\tbackgroundColor: [\"rgb(255, 99, 132)\", \"rgb(75, 192, 192)\", \"rgb(255, 205, 86)\", \"rgb(201, 203, 207)\", \"rgb(54, 162, 235)\"],\r\n\t\t\t\tborderColor: lineGraph,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid templateRows=\"repeat(2,1fr)\" w=\"100%\" h=\"100%\">\r\n\t\t\t<Box p={4}>\r\n\t\t\t\t<Bar data={data} options={options} />\r\n\t\t\t</Box>\r\n\t\t\t<Box p={4}>\r\n\t\t\t\t<Line data={lineData} options={options} />\r\n\t\t\t</Box>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default GenAgeCaseInfoChart;\r\n","import { createPromiseThunk } from \"../asyncGetData\";\r\n\r\nconst GENAGECASEINFO = \"GENAGECASEINFO\";\r\nconst GENAGECASEINFO_SUCCESS = \"GENAGECASEINFO_SUCCESS\";\r\n\r\nexport const genAgeCaseInfoDispatch: any = createPromiseThunk(GENAGECASEINFO);\r\n\r\ntype genAgeTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\tconfCase: number;\r\n\t\t\tconfCaseRate: number;\r\n\t\t\tcreateDt: string;\r\n\t\t\tcriticalRate: number;\r\n\t\t\tdeath: number;\r\n\t\t\tdeathRate: string;\r\n\t\t\tgubun: string;\r\n\t\t\tseq: number;\r\n\t\t\tupdateDt: string;\r\n\t\t}\r\n\t];\r\n};\r\n\r\nconst initialState: genAgeTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\tconfCase: 8915,\r\n\t\t\tconfCaseRate: 4.76,\r\n\t\t\tcreateDt: \"2021-07-24 14:19:04.902\",\r\n\t\t\tcriticalRate: 0,\r\n\t\t\tdeath: 0,\r\n\t\t\tdeathRate: \"0.00\",\r\n\t\t\tgubun: \"0-9\",\r\n\t\t\tseq: 10420,\r\n\t\t\tupdateDt: \"null\",\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst genAgeCaseInfoData = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase GENAGECASEINFO_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default genAgeCaseInfoData;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Flex, Table, Thead, Tbody, Tr, Th, Td, TableCaption } from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport GenAgeCaseInfoChart from \"../chart/GenAgeCaseInfoChart\";\nimport Layout from \"../Layout\";\nimport SpinnerBox from \"../SpinnerBox\";\nimport { genAgeCaseInfoDispatch } from \"../../redux/genAgeCaseInfoReducer\";\nimport moment from \"moment\";\n\nconst GenAgeCaseInfo = () => {\n\tconst { genAgeCaseInfoReducer } = useSelector((state: any) => ({ genAgeCaseInfoReducer: state.genAgeCaseInfoReducer.data }));\n\n\tconst dispatch = useDispatch();\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst setLoadingState = (state: boolean) => {\n\t\tsetIsLoading(state);\n\t};\n\n\tuseEffect(() => {\n\t\t// 코로나19 연령별·성별감염 현황\n\t\tdispatch(\n\t\t\tgenAgeCaseInfoDispatch({\n\t\t\t\turl: \"getCovid19GenAgeCaseInfJson\",\n\t\t\t\tsetLoadingState,\n\t\t\t})\n\t\t);\n\t}, []);\n\n\ttype genAgeTypes = {\n\t\tconfCase: number;\n\t\tconfCaseRate: number;\n\t\tcreateDt: string;\n\t\tcriticalRate: number;\n\t\tdeath: number;\n\t\tdeathRate: number;\n\t\tgubun: string;\n\t\tseq: number;\n\t};\n\n\tconst CREACT_DT =\n\t\tgenAgeCaseInfoReducer &&\n\t\tgenAgeCaseInfoReducer\n\t\t\t.map((date: genAgeTypes) => date)\n\t\t\t.sort((a: genAgeTypes, b: genAgeTypes) => Number(moment(a.createDt).format(\"YYYYMMDD\")) - Number(moment(b.createDt).format(\"YYYYMMDD\")))\n\t\t\t.slice(-11);\n\n\treturn (\n\t\t<>\n\t\t\t{isLoading && <SpinnerBox />}\n\t\t\t{!isLoading && (\n\t\t\t\t<Layout title=\"공공데이터활용지원센터_보건복지부 코로나19 연령별·성별감염 현황\">\n\t\t\t\t\t<GenAgeCaseInfoChart genAgeCaseInfoReducer={genAgeCaseInfoReducer && genAgeCaseInfoReducer} CREACT_DT={CREACT_DT} />\n\t\t\t\t\t<Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\n\t\t\t\t\t\t<Table variant=\"striped\" size=\"sm\" flex=\"1\">\n\t\t\t\t\t\t\t<TableCaption fontSize=\"md\"></TableCaption>\n\t\t\t\t\t\t\t<Thead>\n\t\t\t\t\t\t\t\t<Tr>\n\t\t\t\t\t\t\t\t\t<Th>구분(성별, 연령별)</Th>\n\t\t\t\t\t\t\t\t\t<Th>확진자</Th>\n\t\t\t\t\t\t\t\t\t<Th>확진률</Th>\n\t\t\t\t\t\t\t\t\t<Th>사망자</Th>\n\t\t\t\t\t\t\t\t\t<Th>사망률</Th>\n\t\t\t\t\t\t\t\t\t<Th>치명률</Th>\n\t\t\t\t\t\t\t\t</Tr>\n\t\t\t\t\t\t\t</Thead>\n\t\t\t\t\t\t\t<Tbody>\n\t\t\t\t\t\t\t\t{CREACT_DT?.map((genAge: genAgeTypes) => {\n\t\t\t\t\t\t\t\t\tconst { gubun, confCase, confCaseRate, death, deathRate, criticalRate } = genAge;\n\t\t\t\t\t\t\t\t\tconst genAgeType = gubun.indexOf(\"남성\") > -1 || gubun.indexOf(\"여성\") > -1 || gubun.indexOf(\"80 이상\") > -1 ? gubun : `${gubun}세`;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Tr key={gubun}>\n\t\t\t\t\t\t\t\t\t\t\t<Td>{genAgeType}</Td>\n\t\t\t\t\t\t\t\t\t\t\t<Td>{confCase.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t\t<Td>{confCaseRate.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t\t<Td>{death.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t\t<Td>{deathRate.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t\t<Td>{criticalRate.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t</Tr>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Tbody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</Flex>\n\t\t\t\t</Layout>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default GenAgeCaseInfo;\n","import { createPromiseThunk } from \"../asyncGetData\";\r\nimport { overSeasTypes } from \"../component/pages/NatInfoState\";\r\n\r\nconst OVERSEAS = \"OVERSEAS\";\r\nconst OVERSEAS_SUCCESS = \"OVERSEAS_SUCCESS\";\r\n\r\nexport const overseasDispatch: any = createPromiseThunk(OVERSEAS);\r\n\r\nconst initialState: overSeasTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\tareaNm: \"\",\r\n\t\t\tareaNmCn: \"\",\r\n\t\t\tareaNmEn: \"\",\r\n\t\t\tcreateDt: \"\",\r\n\t\t\tnatDeathCnt: 0,\r\n\t\t\tnatDeathRate: 0,\r\n\t\t\tnatDefCnt: 0,\r\n\t\t\tnationNm: \"\",\r\n\t\t\tnationNmCn: \"\",\r\n\t\t\tnationNmEn: \"\",\r\n\t\t\tseq: 0,\r\n\t\t\tstdDay: \"\",\r\n\t\t\tupdateDt: \"\",\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst getOverseasData = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase OVERSEAS_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default getOverseasData;\r\n","import { useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\ntype dataTypes = {\n\tlabels: string[];\n\tdatasets: {\n\t\taxis: string;\n\t\tlabel: string[] | string;\n\t\tdata: number[];\n\t\tfill: boolean;\n\t\tbackgroundColor: string[];\n\t\tborderColor: string[];\n\t\tborderWidth: number;\n\t}[];\n};\n\nconst NatInfoStateChart = ({ CREATE_DT }: any) => {\n\tconst NATIONAL = CREATE_DT.filter((item: any) => item.nationNm === \"한국\" || item.nationNm === \"대만\" || item.nationNm === \"중국\" || item.nationNm === \"베트남\" || item.nationNm === \"일본\" || item.nationNm === \"뉴질랜드\" || item.nationNm === \"태국\");\n\n\tconst NATIONAL_DATA = NATIONAL.map((item: any) => item.natDefCnt);\n\tconst NATIONAL_NAME = NATIONAL.map((item: any) => item.nationNm);\n\n\tconst lineGraph = useColorModeValue(\"rgba(229, 229, 229)\", \"rgba(255,255,255,0.5)\");\n\tconst ticksColor = useColorModeValue(\"gray.200\", \"#fff\");\n\n\tconst data: dataTypes = {\n\t\tlabels: NATIONAL_NAME,\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\taxis: \"y\",\n\t\t\t\tlabel: \"My First Dataset\",\n\t\t\t\tdata: NATIONAL_DATA,\n\t\t\t\tfill: false,\n\t\t\t\tbackgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(255, 159, 64, 0.2)\", \"rgba(255, 205, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(201, 203, 207, 0.2)\"],\n\t\t\t\tborderColor: [\"rgb(255, 99, 132)\", \"rgb(255, 159, 64)\", \"rgb(255, 205, 86)\", \"rgb(75, 192, 192)\", \"rgb(54, 162, 235)\", \"rgb(153, 102, 255)\", \"rgb(201, 203, 207)\"],\n\t\t\t\tborderWidth: 1,\n\t\t\t},\n\t\t],\n\t};\n\tconst options = {\n\t\tindexAxis: \"y\",\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: false,\n\t\t\t},\n\t\t},\n\t\tscales: {\n\t\t\txAxis: {\n\t\t\t\tgrid: {\n\t\t\t\t\tborderColor: lineGraph,\n\t\t\t\t\tcolor: lineGraph,\n\t\t\t\t},\n\t\t\t\tticks: {\n\t\t\t\t\tcolor: ticksColor,\n\t\t\t\t},\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\tgrid: {\n\t\t\t\t\tborderColor: lineGraph,\n\t\t\t\t\tcolor: lineGraph,\n\t\t\t\t},\n\t\t\t\tticks: {\n\t\t\t\t\tcolor: ticksColor,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tmaintainAspectRatio: false,\n\t};\n\n\treturn <Bar data={data} options={options} />;\n};\n\nexport default NatInfoStateChart;\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Flex, Heading, Table, TableCaption, Tbody, Td, Th, Thead, Tr } from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { overseasDispatch } from \"../../redux/overseasReducer\";\nimport NatInfoStateChart from \"../chart/NatInfoStateChart\";\nimport Layout from \"../Layout\";\nimport SpinnerBox from \"../SpinnerBox\";\nimport moment from \"moment\";\nimport styles from \"./NatInfoState.module.css\";\n\nexport type overSeasTypes = {\n\tdata: [\n\t\t{\n\t\t\tareaNm: string;\n\t\t\tareaNmCn: string;\n\t\t\tareaNmEn: string;\n\t\t\tcreateDt: string;\n\t\t\tnatDeathCnt: number;\n\t\t\tnatDeathRate: number;\n\t\t\tnatDefCnt: number;\n\t\t\tnationNm: string;\n\t\t\tnationNmCn: string;\n\t\t\tnationNmEn: string;\n\t\t\tseq: number;\n\t\t\tstdDay: string;\n\t\t\tupdateDt: string;\n\t\t}\n\t];\n};\n\nconst NatInfoState = () => {\n\tconst { overseasReducer } = useSelector((state: any) => ({ overseasReducer: state.overseasReducer.data }));\n\tconst dispatch = useDispatch();\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst setLoadingState = (state: boolean) => {\n\t\tsetIsLoading(state);\n\t};\n\n\tconst CREATE_DT =\n\t\toverseasReducer &&\n\t\toverseasReducer\n\t\t\t.map((date: overSeasTypes) => date)\n\t\t\t.sort((a: { createDt: string }, b: { createDt: string }) => Number(moment(a.createDt)) - Number(moment(b.createDt)))\n\t\t\t.slice(-190);\n\n\tuseEffect(() => {\n\t\t// 코로나19 시·도발생 현황\n\t\tdispatch(\n\t\t\toverseasDispatch({\n\t\t\t\turl: \"getCovid19NatInfStateJson\",\n\t\t\t\tsetLoadingState,\n\t\t\t})\n\t\t);\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{isLoading && <SpinnerBox />}\n\t\t\t{!isLoading && (\n\t\t\t\t<Layout title=\"공공데이터활용지원센터_보건복지부 코로나19해외발생 현황\">\n\t\t\t\t\t<NatInfoStateChart isLoading={isLoading} CREATE_DT={CREATE_DT} />\n\t\t\t\t\t<Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\n\t\t\t\t\t\t<Heading size=\"md\" mb={4}>\n\t\t\t\t\t\t\t해외발생 현황\n\t\t\t\t\t\t</Heading>\n\n\t\t\t\t\t\t<Box h=\"100%\" overflow=\"hidden\" overflowY=\"auto\" flex=\"1\">\n\t\t\t\t\t\t\t<Table variant=\"striped\" size=\"sm\" w=\"100%\" h=\"100%\">\n\t\t\t\t\t\t\t\t<TableCaption fontSize=\"md\">코로나19 해외발생 현황</TableCaption>\n\t\t\t\t\t\t\t\t<Thead>\n\t\t\t\t\t\t\t\t\t<Tr>\n\t\t\t\t\t\t\t\t\t\t<Th>국가명</Th>\n\t\t\t\t\t\t\t\t\t\t<Th>지역명</Th>\n\t\t\t\t\t\t\t\t\t\t<Th>국가별 확진자 수</Th>\n\t\t\t\t\t\t\t\t\t\t<Th>국가별 사망자 수</Th>\n\t\t\t\t\t\t\t\t\t\t<Th>확진률 대비 사망률</Th>\n\t\t\t\t\t\t\t\t\t</Tr>\n\t\t\t\t\t\t\t\t</Thead>\n\t\t\t\t\t\t\t\t<Tbody>\n\t\t\t\t\t\t\t\t\t{CREATE_DT?.map((item: any) => {\n\t\t\t\t\t\t\t\t\t\tconst { areaNm, natDeathCnt, natDeathRate, natDefCnt, nationNm, nationNmEn } = item;\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<Tr key={nationNm} className={(nationNm === \"일본\" && styles.special) || (nationNm === \"한국\" && styles.special)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{nationNm} ({nationNmEn})\n\t\t\t\t\t\t\t\t\t\t\t\t</Td>\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{areaNm}</Td>\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{natDefCnt.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{natDeathCnt.toLocaleString()}</Td>\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{Number(natDeathRate).toFixed(2)}</Td>\n\t\t\t\t\t\t\t\t\t\t\t</Tr>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</Tbody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Flex>\n\t\t\t\t</Layout>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default NatInfoState;\n","import * as React from \"react\";\nimport { ChakraProvider, Flex, theme } from \"@chakra-ui/react\";\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\nimport Header from \"./component/Header\";\nimport Footer from \"./component/Footer\";\nimport { Route } from \"react-router-dom\";\nimport \"./index.css\";\nimport Covid19State from \"./component/pages/Covid19State\";\nimport SidoInfoState from \"./component/pages/SidoInfoState\";\nimport GenAgeCaseInfo from \"./component/pages/GenAgeCaseInfo\";\nimport NatInfoState from \"./component/pages/NatInfoState\";\n\nexport const App = () => {\n\treturn (\n\t\t<ChakraProvider theme={theme}>\n\t\t\t<Flex flexDirection=\"column\" w=\"100vw\" h=\"100vh\">\n\t\t\t\t<Flex justifyContent=\"space-between\" alignItems=\"center\" px={4} borderBottomWidth=\"1px\" borderColor=\"gray.200\" boxShadow=\"md\">\n\t\t\t\t\t<Header />\n\t\t\t\t\t<ColorModeSwitcher />\n\t\t\t\t</Flex>\n\n\t\t\t\t<Route path=\"/\" exact component={Covid19State} />\n\t\t\t\t<Route path=\"/SidoInfoState\" component={SidoInfoState} />\n\t\t\t\t<Route path=\"/GenAgeCaseInfo\" component={GenAgeCaseInfo} />\n\t\t\t\t<Route path=\"/NatInfoState\" component={NatInfoState} />\n\n\t\t\t\t<Footer />\n\t\t\t</Flex>\n\t\t</ChakraProvider>\n\t);\n};\n","import { combineReducers } from \"redux\";\nimport overseasReducer from \"./overseasReducer\"; // 코로나19해외발생 현황 상세설명\nimport sidoInfoReducer from \"./sidoInfoReducer\"; // 코로나19 시·도발생 현황\nimport genAgeCaseInfoReducer from \"./genAgeCaseInfoReducer\"; // 코로나19 연령별·성별감염 현황\nimport covid19InfooReducer from \"./covid19InfooReducer\"; // 코로나19 감염 현황\nconst RootReducer = combineReducers({ overseasReducer, sidoInfoReducer, genAgeCaseInfoReducer, covid19InfooReducer });\n\nexport default RootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport RootReducer from \"./reducers\";\n\nconst store = createStore(RootReducer, applyMiddleware(ReduxThunk));\n\nexport default store;\n","import { ColorModeScript } from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport store from \"./redux/\";\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<ColorModeScript />\r\n\t\t<Provider store={store}>\r\n\t\t\t{process.env.NODE_ENV === \"development\" && (\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<App />\r\n\t\t\t\t</BrowserRouter>\r\n\t\t\t)}\r\n\t\t\t{process.env.NODE_ENV === \"production\" && (\r\n\t\t\t\t<HashRouter>\r\n\t\t\t\t\t<App />\r\n\t\t\t\t</HashRouter>\r\n\t\t\t)}\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}