{"version":3,"sources":["ColorModeSwitcher.tsx","component/Header.tsx","component/Footer.tsx","component/Layout.tsx","util/MakeRandomColor.ts","component/chart/Covid19StateChart.tsx","asyncGetData.ts","redux/covid19InfooReducer.ts","component/SpinnerBox.tsx","component/pages/Covid19State.tsx","component/chart/SidoInfoStateChart.tsx","redux/sidoInfoReducer.ts","component/pages/SidoInfoState.tsx","component/chart/GenAgeCaseInfoChart.tsx","redux/genAgeCaseInfoReducer.ts","component/pages/GenAgeCaseInfo.tsx","redux/overseasReducer.ts","component/chart/NatInfoStateChart.tsx","component/pages/NatInfoState.tsx","App.tsx","redux/reducers.ts","redux/index.ts","index.tsx","component/pages/NatInfoState.module.css","component/pages/SidoInfoState.module.css","component/pages/Covid19State.module.css","component/pages/GenAgeCaseInfo.module.css","component/Header.module.css"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","Header","className","styles","nav","justifyContent","alignItems","display","base","md","covid19","src","alt","width","ul","flexDirection","to","w","unList","Footer","p","align","style","href","target","rel","Layout","children","title","as","minChildWidth","gap","h","overflow","Array","map","child","index","boxShadow","MakeRandomColor","count","colorArray","this","Math","floor","random","i","push","randomColor","Covid19StateChart","STATE_DT","DECIDE_CNT","TODAY_DATE","lineGraph","ticksColor","setRandomColorLine","length","data","labels","date","toString","slice","substring","datasets","label","backgroundColor","setRgbaColor","borderColor","borderWidth","options","plugins","legend","scales","xAxis","grid","ticks","yAxis","maintainAspectRatio","setRandomColorPie","decideCnt","clearCnt","careCnt","deathCnt","pieData","moment","Date","format","pieOptions","drawTicks","templateRows","dotenv","config","console","log","process","today","year","getFullYear","month","getMonth","month2","getDate","yesterday","getToday","getYesterday","lastMonth","queryParams","encodeURIComponent","fetchAPI","url","a","axios","method","then","response","body","items","item","catch","error","createPromiseThunk","type","name","setLoadingState","dispatch","payload","COVID19INFO_PENDING","COVID19INFO_SUCCESS","covid19InfoDispatch","initialState","accDefRate","accExamCnt","accExamCompCnt","createDt","examCnt","resutlNegCnt","seq","stateDt","stateTime","updateDt","covid19InfoData","state","action","SpinnerBox","position","left","right","top","bottom","background","opacity","thickness","speed","emptyColor","Covid19State","covid19InfooReducer","useSelector","useDispatch","useState","isLoading","setIsLoading","sort","b","filter","useEffect","DECIDE_CNT_TODAY","reverse","CONFIRMED_CASE","find","YESTERDAY_CONFIRMED_CASE","Number","TODAY_CONFIRMED_CASE","mb","overflowY","flex","isNaN","toLocaleString","th","toFixed","SidoInfoStateChart","DEF_CNT","GUBUN","setRandomColor","filItem","gubun","defCnt","barData","barOptions","SIDOINFO_SUCCESS","sidoInfoDispatch","gubunCn","gubunEn","incDec","isolClearCnt","isolIngCnt","localOccCnt","overFlowCnt","qurRate","stdDay","getSIDOINFOData","sidoInfoReducer","hangleSort","item1","item2","localeCompare","currentDay","day","city","GenAgeCaseInfoChart","CREACT_DT","CONF_CASE","conf","confCase","CONF_CASE_RATE","confCaseRate","ctg","indexAxis","lineData","GENAGECASEINFO_SUCCESS","genAgeCaseInfoDispatch","criticalRate","death","deathRate","genAgeCaseInfoData","GenAgeCaseInfo","genAgeCaseInfoReducer","genAge","genAgeType","indexOf","OVERSEAS_SUCCESS","overseasDispatch","areaNm","areaNmCn","areaNmEn","natDeathCnt","natDeathRate","natDefCnt","nationNm","nationNmCn","nationNmEn","getOverseasData","NatInfoStateChart","NATIONAL","CREATE_DT","NATIONAL_DATA","NATIONAL_NAME","axis","fill","NatInfoState","overseasReducer","table","special","App","theme","px","borderBottomWidth","path","exact","component","SidoInfoState","RootReducer","combineReducers","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"mPAWaA,EAAsD,SAACC,GAClE,IAAQC,EAAoBC,cAApBD,gBACFE,EAAOC,YAAkB,OAAQ,SACjCC,EAAaD,YAAkBE,IAAQC,KAE7C,OACE,cAAC,IAAD,aACEC,KAAK,KACLC,SAAS,KACTC,QAAQ,QACRC,MAAM,UACNC,WAAW,IACXC,QAASZ,EACTa,KAAM,cAACT,EAAD,IACN,iCAAyBF,EAAzB,UACIH,K,kCCuBKe,EA5CA,WACd,OACC,qCACC,eAAC,IAAD,CAAMC,UAAWC,IAAOC,IAAKC,eAAe,gBAAgBC,WAAW,SAASC,QAAS,CAAEC,KAAM,OAAQC,GAAI,QAA7G,UACC,qBAAKP,UAAWC,IAAOO,QAASC,IAAI,oBAAoBC,IAAI,OAAOC,MAAM,SACzE,8BACC,eAAC,IAAD,CAAeX,UAAWC,IAAOW,GAAIC,cAAe,CAAEP,KAAM,SAAUC,GAAI,OAA1E,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAMO,GAAG,IAAT,8DAED,cAAC,IAAD,UACC,cAAC,IAAD,CAAMA,GAAG,iBAAT,yDAED,cAAC,IAAD,UACC,cAAC,IAAD,CAAMA,GAAG,kBAAT,2EAED,cAAC,IAAD,UACC,cAAC,IAAD,CAAMA,GAAG,gBAAT,6DAKJ,cAAC,IAAD,CAAMC,EAAE,OAAOf,UAAWC,IAAOe,OAAQX,QAAS,CAAEE,GAAI,QAAxD,SACC,8BACC,eAAC,IAAD,CAAeM,cAAe,CAAEP,KAAM,SAAUC,GAAI,OAApD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAMO,GAAG,IAAT,8DAED,cAAC,IAAD,UACC,cAAC,IAAD,CAAMA,GAAG,iBAAT,yDAED,cAAC,IAAD,UACC,cAAC,IAAD,CAAMA,GAAG,kBAAT,2EAED,cAAC,IAAD,UACC,cAAC,IAAD,CAAMA,GAAG,gBAAT,gE,SCxBQG,EAbA,WACd,OACC,eAAC,IAAD,CAAKC,EAAG,EAAGC,MAAM,SAASC,MAAO,CAAEf,QAAS,QAAUA,QAAS,CAAEE,GAAI,oBAAsBd,SAAS,KAApG,uEAEC,mBAAG4B,KAAK,kCAAkCC,OAAO,SAASC,IAAI,aAA9D,6CAFD,IAKE,wDACD,uD,mDCeYC,EAlBA,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,MAC3B,OACC,qCACC,eAAC,IAAD,CAASC,GAAG,KAAKnC,KAAK,KAAK0B,EAAG,EAA9B,kCACQQ,KAER,cAAC,IAAD,CAAYE,cAAc,QAAQC,IAAK,EAAGd,EAAE,OAAOe,EAAE,OAAOZ,EAAG,EAAGa,SAAU,CAAExB,GAAI,UAAlF,SACEkB,aAAoBO,OACpBP,EAASQ,KAAI,SAACC,EAAOC,GAAR,OACZ,cAAC,IAAD,CAAM/B,WAAW,SAAqBW,EAAE,OAAOe,EAAE,OAAOZ,EAAG,EAAGkB,UAAU,OAAOL,SAAU,CAAExB,GAAI,UAA/F,SACE2B,GAD6BC,Y,gDCEtBE,E,WAfd,WAAYC,GAAgB,yBAH5BA,WAG2B,OAF3BC,gBAE2B,EAC1BC,KAAKF,MAAQA,EACbE,KAAKD,WAAa,G,+CAEnB,WACC,OAAOE,KAAKC,MAAsB,IAAhBD,KAAKE,Y,0BAExB,WACC,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,KAAKF,MAAOM,IAC/BJ,KAAKD,WAAWM,KAAhB,eAA6BL,KAAKM,cAAlC,YAAmDN,KAAKM,cAAxD,YAAyEN,KAAKM,cAA9E,WAED,OAAON,KAAKD,e,KCmHCQ,EA5HW,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,WAC5CC,EAAY/D,YAAkB,sBAAuB,yBACrDgE,EAAahE,YAAkB,WAAY,QAE3CiE,EAAqB,IAAIhB,EAAgBW,EAASM,QAalDC,EAAkB,CACvBC,OAAQR,GAAYA,EAASf,KAAI,SAACwB,GAAD,gBAA6BA,EAAKC,WAAWC,MAAM,GAAGC,UAAU,EAAG,GAAnE,YAAyEH,EAAKC,WAAWC,MAAM,GAAGC,UAAU,OAC7IC,SAAU,CACT,CACCC,MAAO,wCACPP,KAAMN,EACNc,gBAAiBV,EAAmBW,eACpCC,YAAaZ,EAAmBW,eAChCE,YAAa,KAKVC,EAAU,CACfC,QAAS,CACRC,OAAQ,CAEPb,OAAQ,CACP7D,MAAOyD,KAIVkB,OAAQ,CACPC,MAAO,CACNC,KAAM,CACLP,YAAad,EACbxD,MAAOwD,GAERsB,MAAO,CACN9E,MAAOyD,IAGTsB,MAAO,CACND,MAAO,CACN9E,MAAOyD,GAERoB,KAAM,CACLP,YAAad,EACbxD,MAAOwD,KAKVwB,qBAAqB,GAGhBC,EAAoB,IAAIvC,EAAgB,GAC9C,EAAmDa,EAAW,GAAtD2B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,QAASC,EAAtC,EAAsCA,SAEhCC,EAAU,CACfzB,OAAQ,CAAC,4BAAS,kCAAU,yCAAY,6BACxCK,SAAU,CACT,CACCC,MAAOoB,IAAO,IAAIC,MAAQC,OAAO,cACjC7B,KAAM,CAACsB,EAAWC,EAAUC,EAASC,GACrCjB,gBAAiBa,EAAkBZ,eACnCC,YAAaW,EAAkBZ,eAC/BE,YAAa,KAIVmB,EAAa,CAClBjB,QAAS,CACRC,OAAQ,CAEPb,OAAQ,CACP7D,MAAOyD,KAIVkB,OAAQ,CACPC,MAAO,CACNC,KAAM,CACLP,YAAad,EACbxD,MAAOwD,EACPmC,WAAW,GAEZb,MAAO,IAIRC,MAAO,CACNF,KAAM,CACLP,YAAad,EACbxD,MAAOwD,EACPmC,WAAW,GAEZb,MAAO,CACNpE,SAAS,KAIZsE,qBAAqB,GAGtB,OACC,eAAC,IAAD,CAAMY,aAAa,gBAAgBxE,EAAE,OAAOe,EAAE,OAA9C,UACC,cAAC,IAAD,CAAKZ,EAAG,EAAR,SACC,cAAC,IAAD,CAAMqC,KAAMA,EAAMY,QAASA,MAE5B,cAAC,IAAD,CAAKjD,EAAG,EAAR,SACC,cAAC,IAAD,CAAKqC,KAAM0B,EAASd,QAASkB,U,4DCzHjCG,EAAOC,SACPC,QAAQC,IAAIC,cAEZ,IAAMC,EAAc,IAAIV,KAClBW,EAAOD,EAAME,cACbC,GAAS,KAAOH,EAAMI,WAAa,IAAItC,OAAO,GAC9CuC,GAAU,IAAML,EAAMI,YAAYtC,OAAO,GACzCF,GAAQ,IAAMoC,EAAMM,WAAWxC,OAAO,GACtCyC,GAAa,KAAOP,EAAMM,UAAY,IAAIxC,OAAO,GAE1C0C,EAAgB,UAAMP,GAAN,OAAaE,GAAb,OAAqBvC,GACrC6C,EAAoB,UAAMR,GAAN,OAAaE,GAAb,OAAqBI,GACzCG,EAAiB,UAAMT,GAAN,OAAaI,GAAb,OAAsBzC,GAIhD+C,EAAc,IAAMC,mBAAmB,cAAzB,kGAGlBD,GAAe,IAAMC,mBAAmB,iBAAmB,IAAMA,mBAAmBF,GACpFC,GAAe,IAAMC,mBAAmB,eAAiB,IAAMA,mBAAmBJ,GAElF,IAAMK,GAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACHC,IAAM,CAClBC,OAAQ,MACRH,IAAK,yFAAkLA,EAAMH,KAE5LO,MAAK,SAACC,GAUN,OADIA,EAPHzD,KACCyD,SACCC,KACCC,MAASC,QAObC,OAAM,SAACC,GAAD,OAAW3B,QAAQC,IAAI0B,MAjBf,mFAAH,sDAoBDC,GAAqB,SAACC,GAClC,IAAIC,EAAe,GACnB,OAAQD,GACP,IAAK,WACJC,EAAO,wCACP,MACD,IAAK,WACJA,EAAO,4CACP,MACD,IAAK,cACJA,EAAO,4BACP,MACD,IAAK,iBACJA,EAAO,8DACP,MACD,QACC,OAAO,KAGT,OAAO,gBAAGb,EAAH,EAAGA,IAAKc,EAAR,EAAQA,gBAAR,8CACN,WAAOC,GAAP,eAAAd,EAAA,+EAEwBF,GAASC,GAFjC,OAEQgB,EAFR,OAGED,EAAS,CAAEH,KAAK,GAAD,OAAKA,EAAL,YAAqBI,YACpCF,GAAmBA,GAAgB,GACnC/B,QAAQC,IAAR,UAAe6B,EAAf,aAAwBD,GAAQI,GALlC,gDAOEjC,QAAQC,IAAR,MAPF,yDADM,wDC7DFiC,GAAsB,sBACtBC,GAAsB,sBAEfC,GAA2BR,GAJpB,eA2BdS,GAAiC,CACtCxE,KAAM,CACL,CACCyE,WAAY,EACZC,WAAY,EACZC,eAAgB,EAChBnD,QAAS,EACTD,SAAU,EACVqD,SAAU,GACVnD,SAAU,EACVH,UAAW,EACXuD,QAAS,EACTC,aAAc,EACdC,IAAK,EACLC,QAAS,EACTC,UAAW,GACXC,SAAU,MAqBEC,GAhBS,WAAwC,IAAvCC,EAAsC,uDAA9BZ,GAAca,EAAgB,uCAC9D,OAAQA,EAAOrB,MACd,KAAKK,GACJ,OAAO,eACHe,GAEL,KAAKd,GACJ,OAAO,2BACHc,GADJ,IAECpF,KAAMqF,EAAOjB,UAEf,QACC,OAAOgB,I,UCnDKE,GARI,WAClB,OACC,cAAC,IAAD,CAAM1I,eAAe,SAASC,WAAW,SAAS0I,SAAS,QAAQC,KAAK,IAAIC,MAAM,IAAIC,IAAI,IAAIC,OAAO,IAAIC,WAAW,WAAWC,QAAQ,MAAvI,SACC,cAAC,KAAD,CAASC,UAAU,MAAMC,MAAM,QAAQC,WAAW,WAAW5J,MAAM,UAAUH,KAAK,U,oBCmGtEgK,GA9FM,WACpB,IAAQC,EAAwBC,aAAY,SAACf,GAAD,MAAiB,CAAEc,oBAAqBd,EAAMc,oBAAoBlG,SAAtGkG,oBAEF/B,EAAWiC,cACjB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMrC,EAAkB,SAACkB,GACxBmB,EAAanB,IAGR3F,EACLyG,GACAA,EACExH,KAAI,SAACkF,GAAD,OAAeA,EAAKoB,WACxBwB,MAAK,SAACnD,EAAWoD,GAAZ,OAA0BpD,EAAIoD,KACnCrG,OAAO,IAEJV,EACLwG,GACAA,EACExH,KAAI,SAACkF,GAAD,OAAeA,EAAKtC,aACxBkF,MAAK,SAACnD,EAAWoD,GAAZ,OAA0BpD,EAAIoD,KACnCrG,OAAO,IAEJT,EAAauG,GAAuBA,EAAoBQ,QAAO,SAAC9C,GAAD,OAAgCjC,IAAOiC,EAAKgB,UAAU/C,OAAO,cAAgBiB,GAAYnB,IAAOiC,EAAKgB,UAAU/C,OAAO,cAAgBkB,KAE3M4D,qBAAU,WAETxC,EACCI,GAAoB,CACnBnB,IAAK,yBACLc,uBAGA,IAGH,IAAM0C,EACLV,GACAA,EACExH,KAAI,SAACkF,GAAD,OAAeA,KACnB4C,MAAK,SAACnD,EAAQoD,GAAT,OAAoBpD,EAAE2B,QAAUyB,EAAEzB,WACvC5E,OAAO,IACPyG,UAGGC,EAAc,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAkBG,MAAK,SAACnD,GAAD,OAA+BA,EAAKoB,QAAQ7E,aAAewB,IAAO,IAAIC,MAAQC,OAAO,eAC7HmF,EAAwB,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAkBG,MAAK,SAACnD,GAAD,OAA+BA,EAAKoB,QAAQ7E,cAAgB8G,OAAOtF,IAAO,IAAIC,MAAQC,OAAO,aAAe,GAAG1B,cACjK+G,GAAqC,OAAdJ,QAAc,IAAdA,OAAA,EAAAA,EAAgBxF,YAAhB,OAA4B0F,QAA5B,IAA4BA,OAA5B,EAA4BA,EAA0B1F,WAEnF,OACC,qCACEgF,GAAa,cAAC,GAAD,KACZA,GACD,eAAC,EAAD,CAAQnI,MAAM,4BAAd,UACC,cAAC,EAAD,CAAmBsB,SAAUA,EAAUC,WAAYA,EAAYC,WAAYA,IAC3E,eAAC,IAAD,CAAMrC,cAAc,SAASE,EAAE,OAAOe,EAAE,OAAxC,UACC,cAAC,IAAD,CAAStC,KAAK,KAAKkL,GAAI,EAAvB,6CAGA,cAAC,IAAD,CAAK5I,EAAE,OAAOC,SAAS,SAAS4I,UAAU,OAAOC,KAAK,IAAtD,SACC,eAAC,IAAD,CAAOlL,QAAQ,UAAUF,KAAK,KAAKoL,KAAK,IAAxC,UACC,cAAC,IAAD,CAAcnL,SAAS,KAAvB,SAA6BoL,MAAMJ,GAAwB,uHAA9B,mDAA2EA,EAAqBK,iBAAhG,YAC7B,cAAC,IAAD,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAI9K,UAAWC,KAAO8K,GAAtB,gCACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,uCACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,6CACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,oDACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,uCACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,qCAGF,cAAC,IAAD,UACEZ,GACAA,EAAiBlI,KAAI,SAACkF,GAAD,OACpB,eAAC,IAAD,WACC,cAAC,IAAD,UAAKjC,IAAOiC,EAAKoB,QAAQ7E,YAAY0B,OAAO,gBAC5C,cAAC,IAAD,UAAK+B,EAAKtC,UAAUiG,mBACpB,cAAC,IAAD,UAAK3D,EAAKrC,SAASgG,mBACnB,cAAC,IAAD,UAAK3D,EAAKpC,QAAQ+F,mBAClB,cAAC,IAAD,UAAK3D,EAAKnC,SAAS8F,mBACnB,cAAC,IAAD,UAAKN,OAAOrD,EAAKa,YAAYgD,QAAQ,OAN7B7D,EAAKoB,6BC2DV0C,GA5IY,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MA4BhCC,EAAiB,IAAI/I,EAAJ,OAAoB6I,QAApB,IAAoBA,OAApB,EAAoBA,EAAS5H,QAY9CC,EAAkB,CACvBC,OAAQ2H,EACRtH,SAAU,CACT,CACCC,MAAOqH,EACP5H,KAAI,OAAE2H,QAAF,IAAEA,OAAF,EAAEA,EAASjB,QAAO,SAACoB,GAAD,MAA0C,iBAAlBA,EAAQC,SAAgBrJ,KAAI,SAACkF,GAAD,OAAqBA,EAAKoE,UACpGxH,gBAAiBqH,EAAepH,eAChCE,YAAa,KAKVf,EAAY/D,YAAkB,sBAAuB,yBACrDgE,EAAahE,YAAkB,WAAY,QAE3C+E,EAAU,CACfC,QAAS,CACRC,OAAQ,CAEPb,OAAQ,CACP7D,MAAOyD,KAIVkB,OAAQ,CACPC,MAAO,CACNC,KAAM,CACLP,YAAad,EACbxD,MAAOwD,GAERsB,MAAO,CACN9E,MAAOyD,IAGTsB,MAAO,CACNF,KAAM,CACLP,YAAad,EACbxD,MAAOwD,GAERsB,MAAO,CACN9E,MAAOyD,KAIVuB,qBAAqB,GAGhB6G,EAAqB,CAC1BhI,OAAQ2H,EACRtH,SAAU,CACT,CACCC,MAAO,kCACPP,KAAI,OAAE2H,QAAF,IAAEA,OAAF,EAAEA,EAASjB,QAAO,SAACoB,GAAD,MAA0C,iBAAlBA,EAAQC,SAAgBrJ,KAAI,SAACkF,GAAD,OAAqBA,EAAKoE,UACpGxH,gBAAiBqH,EAAepH,eAChCE,YAAa,KAKVuH,EAAa,CAClBrH,QAAS,CACRC,OAAQ,CACPhE,SAAS,IAGXiE,OAAQ,CACPC,MAAO,CACNC,KAAM,CACLP,YAAad,EACbxD,MAAOwD,GAERsB,MAAO,CACN9E,MAAOyD,IAGTsB,MAAO,CACND,MAAO,CACN9E,MAAOyD,GAERoB,KAAM,CACLP,YAAad,EACbxD,MAAOwD,KAIVwB,qBAAqB,GAGtB,OACC,eAAC,IAAD,CAAMY,aAAa,gBAAgBxE,EAAE,OAAOe,EAAE,OAA9C,UACC,cAAC,IAAD,CAAKZ,EAAG,EAAR,SACC,cAAC,IAAD,CAAUqC,KAAMA,EAAMY,QAASA,MAEhC,cAAC,IAAD,CAAKjD,EAAG,EAAR,SACC,cAAC,IAAD,CAAKqC,KAAMiI,EAASrH,QAASsH,UCxI3BC,GAAmB,mBAEZC,GAAwBrE,GAHpB,YA2BXS,GAA8B,CACnCxE,KAAM,CACL,CACC4E,SAAU,GACVnD,SAAU,EACVuG,OAAQ,EACRD,MAAO,GACPM,QAAS,GACTC,QAAS,GACTC,OAAQ,EACRC,aAAc,EACdC,WAAY,EACZC,YAAa,EACbC,YAAa,EACbC,QAAS,GACT7D,IAAK,EACL8D,OAAQ,GACR3D,SAAU,MAiBE4D,GAZS,WAAwC,IAAvC1D,EAAsC,uDAA9BZ,GAAca,EAAgB,uCAC9D,OAAQA,EAAOrB,MACd,KAAKmE,GACJ,OAAO,2BACH/C,GADJ,IAECpF,KAAMqF,EAAOjB,UAEf,QACC,OAAOgB,I,oBCoDKa,GApFM,WACpB,IAAQ8C,EAAoB5C,aAAY,SAACf,GAAD,MAAiB,CAAE2D,gBAAiB3D,EAAM2D,gBAAgB/I,SAA1F+I,gBAEF5E,EAAWiC,cACjB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMrC,EAAkB,SAACkB,GACxBmB,EAAanB,IAGRuC,EAAO,OAAGoB,QAAH,IAAGA,OAAH,EAAGA,EACbrK,KAAI,SAACkF,GAAD,OAAyBA,KAC9B4C,MAAK,SAACnD,EAAQoD,GAAT,OAAoBQ,OAAOtF,IAAO0B,EAAEuB,UAAU/C,OAAO,aAAeoF,OAAOtF,IAAO8E,EAAE7B,UAAU/C,OAAO,gBAC1GzB,OAAO,IAGHwH,EAAK,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAASjB,QAAO,SAACoB,GAAD,MAA8C,iBAAlBA,EAAQC,SAAgBrJ,KAAI,SAACkF,GAAD,OAAyBA,EAAKmE,SAG9GiB,EAAU,OAAGrB,QAAH,IAAGA,OAAH,EAAGA,EAASjJ,KAAI,SAACkF,GAAD,OAAyBA,KAAM4C,MAAK,SAACnD,EAAkBoD,GACtF,IAAMwC,EAAgB5F,EAAE0E,MAClBmB,EAAgBzC,EAAEsB,MACxB,OAAOkB,EAAME,cAAcD,MAItBE,EAAU,OAAGzB,QAAH,IAAGA,OAAH,EAAGA,EAASZ,MAAK,SAACsC,GAAD,OAA+B1H,IAAO0H,EAAIzE,UAAU/C,OAAO,eAY5F,OAVA8E,qBAAU,WAETxC,EACCiE,GAAiB,CAChBhF,IAAK,6BACLc,uBAGA,IAGF,qCACEoC,GAAa,cAAC,GAAD,KACZA,GACD,eAAC,EAAD,CAAQnI,MAAM,wEAAd,UACC,cAAC,GAAD,CAAoBwJ,QAASA,EAASC,MAAOA,EAAOtB,UAAWA,EAAWyC,gBAAiBA,GAAmBA,IAC9G,eAAC,IAAD,CAAMzL,cAAc,SAASE,EAAE,OAAOe,EAAE,OAAxC,UACC,cAAC,IAAD,CAAStC,KAAK,KAAKkL,GAAI,EAAvB,uDAIA,cAAC,IAAD,CAAK5I,EAAE,OAAOC,SAAS,SAAS4I,UAAU,OAAOC,KAAK,IAAtD,SACC,eAAC,IAAD,CAAOlL,QAAQ,UAAUF,KAAK,KAAKuB,EAAE,OAArC,UACC,cAAC,IAAD,CAActB,SAAS,KAAvB,mBAAgCyF,IAAM,OAACyH,QAAD,IAACA,OAAD,EAACA,EAAYxE,UAAU/C,OAAO,iBACpE,cAAC,IAAD,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAIpF,UAAWC,KAAO8K,GAAtB,gCACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,uCACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,mDACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,8CACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,0DACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,6CACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,kDAGF,cAAC,IAAD,iBACEwB,QADF,IACEA,OADF,EACEA,EAAYtK,KAAI,SAAC4K,GAAD,OAChB,eAAC,IAAD,WACC,cAAC,IAAD,UAAKA,EAAKvB,MAAMR,mBAChB,cAAC,IAAD,UAAK+B,EAAKtB,OAAOT,mBACjB,cAAC,IAAD,UAAK+B,EAAKb,WAAWlB,mBACrB,cAAC,IAAD,UAAK+B,EAAKd,aAAajB,mBACvB,cAAC,IAAD,UAAK+B,EAAKf,OAAOhB,mBACjB,cAAC,IAAD,UAAK+B,EAAKX,YAAYpB,mBACtB,cAAC,IAAD,UAAK+B,EAAKZ,YAAYnB,qBAPd+B,EAAKvB,2BCTTwB,GA7Ea,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,UACxBC,EAAYD,EAAU9K,KAAI,SAACgL,GAAD,OAAgCA,EAAKC,YAC/DC,EAAiBJ,EAAU9K,KAAI,SAACgL,GAAD,OAAoCA,EAAKG,gBACxEjC,EAAQ4B,EAAU9K,KAAI,SAACoL,GAAD,OAA4BA,EAAI/B,SAEtDnI,EAAY/D,YAAkB,sBAAuB,yBACrDgE,EAAahE,YAAkB,WAAY,QAE3CgM,EAAiB,IAAI/I,EAAgB0K,EAAUzJ,QAE/CC,EAAO,CACZC,OAAQ2H,EACRtH,SAAU,CACT,CACCC,MAAO,qBACPP,KAAMyJ,EACNjJ,gBAAiBqH,EAAepH,kBAK7BG,EAAU,CACfmJ,UAAW,IACXlJ,QAAS,CACRC,OAAQ,CACPb,OAAQ,CACP7D,MAAOyD,KAIVkB,OAAQ,CACPC,MAAO,CACNC,KAAM,CACLP,YAAad,EACbxD,MAAOwD,GAERsB,MAAO,CACN9E,MAAOyD,IAGTsB,MAAO,CACNF,KAAM,CACLP,YAAad,EACbxD,MAAOwD,GAERsB,MAAO,CACN9E,MAAOyD,KAIVuB,qBAAqB,GAGhB4I,EAAW,CAChB/J,OAAQ2H,EACRtH,SAAU,CACT,CACCC,MAAO,qBACPP,KAAM4J,EACNpJ,gBAAiBqH,EAAepH,eAChCC,YAAamH,EAAepH,kBAK/B,OACC,eAAC,IAAD,CAAMuB,aAAa,gBAAgBxE,EAAE,OAAOe,EAAE,OAA9C,UACC,cAAC,IAAD,CAAKZ,EAAG,EAAR,SACC,cAAC,IAAD,CAAKqC,KAAMA,EAAMY,QAASA,MAE3B,cAAC,IAAD,CAAKjD,EAAG,EAAR,SACC,cAAC,IAAD,CAAMqC,KAAMgK,EAAUpJ,QAASA,UCzE7BqJ,GAAyB,yBAElBC,GAA8BnG,GAHpB,kBAqBjBS,GAA4B,CACjCxE,KAAM,CACL,CACC2J,SAAU,KACVE,aAAc,KACdjF,SAAU,0BACVuF,aAAc,EACdC,MAAO,EACPC,UAAW,OACXtC,MAAO,MACPhD,IAAK,MACLG,SAAU,UAiBEoF,GAZY,WAAwC,IAAvClF,EAAsC,uDAA9BZ,GAAca,EAAgB,uCACjE,OAAQA,EAAOrB,MACd,KAAKiG,GACJ,OAAO,2BACH7E,GADJ,IAECpF,KAAMqF,EAAOjB,UAEf,QACC,OAAOgB,I,oBCiDKmF,GA3EQ,WACtB,IAAQC,EAA0BrE,aAAY,SAACf,GAAD,MAAiB,CAAEoF,sBAAuBpF,EAAMoF,sBAAsBxK,SAA5GwK,sBAEFrG,EAAWiC,cACjB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMrC,EAAkB,SAACkB,GACxBmB,EAAanB,IAGRoE,EACLgB,GACAA,EACE9L,KAAI,SAACwB,GAAD,OAAuBA,KAC3BsG,MAAK,SAACnD,EAAgBoD,GAAjB,OAAoCQ,OAAOtF,IAAO0B,EAAEuB,UAAU/C,OAAO,aAAeoF,OAAOtF,IAAO8E,EAAE7B,UAAU/C,OAAO,gBAC1HzB,OAAO,IAYV,OAVAuG,qBAAU,WAETxC,EACC+F,GAAuB,CACtB9G,IAAK,8BACLc,uBAGA,IAGF,qCACEoC,GAAa,cAAC,GAAD,KACZA,GACD,eAAC,EAAD,CAAQnI,MAAM,8DAAd,UACC,cAAC,GAAD,CAAqBqM,sBAAuBA,GAAyBA,EAAuBhB,UAAWA,IACvG,eAAC,IAAD,CAAMlM,cAAc,SAASE,EAAE,OAAOe,EAAE,OAAxC,UACC,cAAC,IAAD,CAAStC,KAAK,KAAKkL,GAAI,EAAvB,6CAIA,cAAC,IAAD,CAAK5I,EAAE,OAAOC,SAAS,SAAS4I,UAAU,OAAOC,KAAK,IAAtD,SACC,eAAC,IAAD,CAAOlL,QAAQ,UAAUF,KAAK,KAAKuB,EAAE,OAArC,UACC,cAAC,IAAD,CAActB,SAAS,OACvB,cAAC,IAAD,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAIO,UAAWC,KAAO8K,GAAtB,4DACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,gCACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,gCACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,gCACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,gCACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,qCAGF,cAAC,IAAD,iBACEgC,QADF,IACEA,OADF,EACEA,EAAW9K,KAAI,SAAC+L,GAChB,IAAQ1C,EAAkE0C,EAAlE1C,MAAO4B,EAA2Dc,EAA3Dd,SAAUE,EAAiDY,EAAjDZ,aAAcO,EAAmCK,EAAnCL,MAAOC,EAA4BI,EAA5BJ,UAAWF,EAAiBM,EAAjBN,aACnDO,EAAa3C,EAAM4C,QAAQ,iBAAS,GAAK5C,EAAM4C,QAAQ,iBAAS,GAAK5C,EAAM4C,QAAQ,oBAAY,EAAI5C,EAAtF,UAAiGA,EAAjG,UACnB,OACC,eAAC,IAAD,WACC,cAAC,IAAD,UAAK2C,IACL,cAAC,IAAD,UAAKf,EAASpC,mBACd,cAAC,IAAD,UAAKsC,EAAatC,mBAClB,cAAC,IAAD,UAAK6C,EAAM7C,mBACX,cAAC,IAAD,UAAK8C,EAAU9C,mBACf,cAAC,IAAD,UAAK4C,EAAa5C,qBANVQ,uBCxEd6C,GAAmB,mBAEZC,GAAwB9G,GAHpB,YAKXS,GAA8B,CACnCxE,KAAM,CACL,CACC8K,OAAQ,GACRC,SAAU,GACVC,SAAU,GACVpG,SAAU,GACVqG,YAAa,EACbC,aAAc,EACdC,UAAW,EACXC,SAAU,GACVC,WAAY,GACZC,WAAY,GACZvG,IAAK,EACL8D,OAAQ,GACR3D,SAAU,MAiBEqG,GAZS,WAAwC,IAAvCnG,EAAsC,uDAA9BZ,GAAca,EAAgB,uCAC9D,OAAQA,EAAOrB,MACd,KAAK4G,GACJ,OAAO,2BACHxF,GADJ,IAECpF,KAAMqF,EAAOjB,UAEf,QACC,OAAOgB,I,oBCyCKoG,GA3DW,SAAC,GAAwB,IAC5CC,EAD2C,EAArBC,UACDhF,QAAO,SAAC9C,GAAD,MAAiC,iBAAlBA,EAAKwH,UAAuC,iBAAlBxH,EAAKwH,UAAuC,iBAAlBxH,EAAKwH,UAAuC,uBAAlBxH,EAAKwH,UAAwC,iBAAlBxH,EAAKwH,UAAuC,6BAAlBxH,EAAKwH,UAAyC,iBAAlBxH,EAAKwH,YAE/MO,EAAgBF,EAAS/M,KAAI,SAACkF,GAAD,OAAeA,EAAKuH,aACjDS,EAAgBH,EAAS/M,KAAI,SAACkF,GAAD,OAAeA,EAAKwH,YAEjDxL,EAAY/D,YAAkB,sBAAuB,yBACrDgE,EAAahE,YAAkB,WAAY,QAE3CgM,EAAiB,IAAI/I,EAAgB2M,EAAS1L,QAE9CC,EAAkB,CACvBC,OAAQ2L,EACRtL,SAAU,CACT,CACCuL,KAAM,IACNtL,MAAO,4BACPP,KAAM2L,EACNG,MAAM,EACNtL,gBAAiBqH,EAAepH,eAChCC,YAAamH,EAAepH,eAC5BE,YAAa,KAKVC,EAAU,CACfmJ,UAAW,IACXlJ,QAAS,CACRC,OAAQ,CACPhE,SAAS,IAGXiE,OAAQ,CACPC,MAAO,CACNC,KAAM,CACLP,YAAad,EACbxD,MAAOwD,GAERsB,MAAO,CACN9E,MAAOyD,IAGTsB,MAAO,CACNF,KAAM,CACLP,YAAad,EACbxD,MAAOwD,GAERsB,MAAO,CACN9E,MAAOyD,KAIVuB,qBAAqB,GAGtB,OAAO,cAAC,IAAD,CAAKpB,KAAMA,EAAMY,QAASA,KC6BnBmL,GAzEM,WACpB,IAAQC,EAAoB7F,aAAY,SAACf,GAAD,MAAiB,CAAE4G,gBAAiB5G,EAAM4G,gBAAgBhM,SAA1FgM,gBACF7H,EAAWiC,cACjB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMrC,EAAkB,SAACkB,GACxBmB,EAAanB,IAGRsG,EACLM,GACAA,EACEtN,KAAI,SAACwB,GAAD,OAAyBA,KAC7BsG,MAAK,SAACnD,EAAyBoD,GAA1B,OAAsDQ,OAAOtF,IAAO0B,EAAEuB,WAAaqC,OAAOtF,IAAO8E,EAAE7B,cACxGxE,OAAO,KAYV,OAVAuG,qBAAU,WAETxC,EACC0G,GAAiB,CAChBzH,IAAK,4BACLc,uBAGA,IAGF,qCACEoC,GAAa,cAAC,GAAD,KACZA,GACD,eAAC,EAAD,CAAQnI,MAAM,wCAAd,UACC,cAAC,GAAD,CAAmBmI,UAAWA,EAAWoF,UAAWA,IACpD,eAAC,IAAD,CAAMpO,cAAc,SAASE,EAAE,OAAOe,EAAE,OAAxC,UACC,cAAC,IAAD,CAAStC,KAAK,KAAKkL,GAAI,EAAvB,mDAIA,cAAC,IAAD,CAAK5I,EAAE,OAAOC,SAAS,SAAS4I,UAAU,OAAOC,KAAK,IAAtD,SACC,eAAC,IAAD,CAAOlL,QAAQ,UAAUF,KAAK,KAAKuB,EAAE,OAAOf,UAAWC,KAAOuP,MAA9D,UACC,cAAC,IAAD,CAAc/P,SAAS,KAAvB,wEACA,cAAC,IAAD,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAIO,UAAWC,KAAO8K,GAAtB,gCACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,gCACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,0DACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,0DACA,cAAC,IAAD,CAAI/K,UAAWC,KAAO8K,GAAtB,qEAGF,cAAC,IAAD,iBACEkE,QADF,IACEA,OADF,EACEA,EAAWhN,KAAI,SAACkF,GAChB,IAAQkH,EAAuElH,EAAvEkH,OAAQG,EAA+DrH,EAA/DqH,YAAaC,EAAkDtH,EAAlDsH,aAAcC,EAAoCvH,EAApCuH,UAAWC,EAAyBxH,EAAzBwH,SAAUE,EAAe1H,EAAf0H,WAChE,OACC,eAAC,IAAD,CAAmB7O,UAAyB,iBAAb2O,GAAqB1O,KAAOwP,SAA0B,iBAAbd,GAAqB1O,KAAOwP,QAApG,UACC,eAAC,IAAD,WACEd,EADF,KACcE,EADd,OAGA,cAAC,IAAD,UAAKR,IACL,cAAC,IAAD,UAAKK,EAAU5D,mBACf,cAAC,IAAD,UAAK0D,EAAY1D,mBACjB,cAAC,IAAD,UAAKN,OAAOiE,GAAczD,QAAQ,OAP1B2D,uBCtEPe,GAAM,WAClB,OACC,cAAC,IAAD,CAAgBC,MAAOA,QAAvB,SACC,eAAC,IAAD,CAAM9O,cAAc,SAASE,EAAE,QAAQe,EAAE,QAAzC,UACC,eAAC,IAAD,CAAM3B,eAAe,gBAAgBC,WAAW,SAASwP,GAAI,EAAGC,kBAAkB,MAAM5L,YAAY,WAAW7B,UAAU,KAAzH,UACC,cAAC,EAAD,IACA,cAAC,EAAD,OAGD,cAAC,IAAD,CAAO0N,KAAK,IAAIC,OAAK,EAACC,UAAWxG,KACjC,cAAC,IAAD,CAAOsG,KAAK,iBAAiBE,UAAWC,KACxC,cAAC,IAAD,CAAOH,KAAK,kBAAkBE,UAAWlC,KACzC,cAAC,IAAD,CAAOgC,KAAK,gBAAgBE,UAAWV,KAEvC,cAAC,EAAD,U,mBCnBWY,GAFKC,aAAgB,CAAEZ,mBAAiBjD,mBAAiByB,yBAAuBtE,yBCChF2G,GAFDC,aAAYH,GAAaI,aAAgBC,OCIvDC,IAASC,OACR,eAAC,aAAD,WACC,cAAC,IAAD,IACA,eAAC,IAAD,CAAUL,MAAOA,GAAjB,WACExK,EAMA,cAAC,IAAD,UACC,cAAC,GAAD,YAKJ8K,SAASC,eAAe,U,mBCvBzBC,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,QAAU,8BAA8B,GAAK,2B,mBCAnGD,EAAOC,QAAU,CAAC,GAAK,4B,mBCAvBD,EAAOC,QAAU,CAAC,GAAK,2B,mBCAvBD,EAAOC,QAAU,CAAC,GAAK,6B,mBCAvBD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,GAAK,mBAAmB,OAAS,0B","file":"static/js/main.d05c631a.chunk.js","sourcesContent":["import * as React from \"react\"\r\nimport {\r\n  useColorMode,\r\n  useColorModeValue,\r\n  IconButton,\r\n  IconButtonProps,\r\n} from \"@chakra-ui/react\"\r\nimport { FaMoon, FaSun } from \"react-icons/fa\"\r\n\r\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\r\n\r\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\r\n  const { toggleColorMode } = useColorMode()\r\n  const text = useColorModeValue(\"dark\", \"light\")\r\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\r\n\r\n  return (\r\n    <IconButton\r\n      size=\"md\"\r\n      fontSize=\"lg\"\r\n      variant=\"ghost\"\r\n      color=\"current\"\r\n      marginLeft=\"2\"\r\n      onClick={toggleColorMode}\r\n      icon={<SwitchIcon />}\r\n      aria-label={`Switch to ${text} mode`}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Flex, ListItem, UnorderedList } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Header.module.css\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Flex className={styles.nav} justifyContent=\"space-between\" alignItems=\"center\" display={{ base: \"none\", md: \"flex\" }}>\r\n\t\t\t\t<img className={styles.covid19} src=\"./images/alex.jpg\" alt=\"alex\" width=\"60px\" />\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<UnorderedList className={styles.ul} flexDirection={{ base: \"column\", md: \"row\" }}>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Link to=\"/\">코로나19 감염 현황</Link>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Link to=\"/SidoInfoState\">시·도발생 현황</Link>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Link to=\"/GenAgeCaseInfo\">연령별·성별감염 현황</Link>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Link to=\"/NatInfoState\">해외발생 현황</Link>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</UnorderedList>\r\n\t\t\t\t</nav>\r\n\t\t\t</Flex>\r\n\t\t\t<Flex w=\"100%\" className={styles.unList} display={{ md: \"none\" }}>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<UnorderedList flexDirection={{ base: \"column\", md: \"row\" }}>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Link to=\"/\">코로나19 감염 현황</Link>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Link to=\"/SidoInfoState\">시·도발생 현황</Link>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Link to=\"/GenAgeCaseInfo\">연령별·성별감염 현황</Link>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<Link to=\"/NatInfoState\">해외발생 현황</Link>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</UnorderedList>\r\n\t\t\t\t</nav>\r\n\t\t\t</Flex>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { Box } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<Box p={4} align=\"center\" style={{ display: \"none\" }} display={{ md: \"block !important\" }} fontSize=\"sm\">\r\n\t\t\t제공: 공공데이터포털 (\r\n\t\t\t<a href=\"https://www.data.go.kr/index.do\" target=\"_blank\" rel=\"noreferrer\">\r\n\t\t\t\thttps://www.data.go.kr/index.do\r\n\t\t\t</a>\r\n\t\t\t)<p>2021-07-19 ~ 2021-07-29</p>\r\n\t\t\t<p>CREATOR: ALEXSANDO</p>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Box, Flex, Grid, Heading, SimpleGrid } from \"@chakra-ui/react\";\r\n\r\ninterface childrenProps {\r\n\tchildren: JSX.Element[] | JSX.Element;\r\n\ttitle: string;\r\n}\r\n\r\nconst Layout = ({ children, title }: childrenProps) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Heading as=\"h2\" size=\"md\" p={4}>\r\n\t\t\t\t코로나19 {title}\r\n\t\t\t</Heading>\r\n\t\t\t<SimpleGrid minChildWidth=\"375px\" gap={6} w=\"100%\" h=\"100%\" p={4} overflow={{ md: \"hidden\" }}>\r\n\t\t\t\t{children instanceof Array &&\r\n\t\t\t\t\tchildren.map((child, index) => (\r\n\t\t\t\t\t\t<Flex alignItems=\"center\" key={index} w=\"100%\" h=\"100%\" p={4} boxShadow=\"base\" overflow={{ md: \"hidden\" }}>\r\n\t\t\t\t\t\t\t{child}\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t))}\r\n\t\t\t</SimpleGrid>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Layout;\r\n","class MakeRandomColor {\r\n\tcount: number;\r\n\tcolorArray: string[];\r\n\r\n\tconstructor(count: number) {\r\n\t\tthis.count = count;\r\n\t\tthis.colorArray = [];\r\n\t}\r\n\trandomColor() {\r\n\t\treturn Math.floor(Math.random() * 255);\r\n\t}\r\n\tsetRgbaColor() {\r\n\t\tfor (let i = 0; i < this.count; i++) {\r\n\t\t\tthis.colorArray.push(`rgba(${this.randomColor()},${this.randomColor()},${this.randomColor()}, 0.6)`);\r\n\t\t}\r\n\t\treturn this.colorArray;\r\n\t}\r\n}\r\n\r\nexport default MakeRandomColor;\r\n","import { Box, Grid, Heading, useColorModeValue } from \"@chakra-ui/react\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { Line, Pie } from \"react-chartjs-2\";\r\nimport MakeRandomColor from \"../../util/MakeRandomColor\";\r\n\r\nconst Covid19StateChart = ({ STATE_DT, DECIDE_CNT, TODAY_DATE }: any) => {\r\n\tconst lineGraph = useColorModeValue(\"rgba(229, 229, 229)\", \"rgba(255,255,255,0.5)\");\r\n\tconst ticksColor = useColorModeValue(\"gray.200\", \"#fff\");\r\n\r\n\tconst setRandomColorLine = new MakeRandomColor(STATE_DT.length);\r\n\r\n\ttype dataTypes = {\r\n\t\tlabels: string[];\r\n\t\tdatasets: {\r\n\t\t\tlabel: string;\r\n\t\t\tdata: number[];\r\n\t\t\tbackgroundColor: string[];\r\n\t\t\tborderColor: string[];\r\n\t\t\tborderWidth: number;\r\n\t\t}[];\r\n\t};\r\n\r\n\tconst data: dataTypes = {\r\n\t\tlabels: STATE_DT && STATE_DT.map((date: number): string => `${date.toString().slice(4).substring(0, 2)}/${date.toString().slice(4).substring(2)}`),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"누적 확진자수\",\r\n\t\t\t\tdata: DECIDE_CNT,\r\n\t\t\t\tbackgroundColor: setRandomColorLine.setRgbaColor(),\r\n\t\t\t\tborderColor: setRandomColorLine.setRgbaColor(),\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\t// display: false,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\txAxis: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\t// responsive: false,\r\n\t\tmaintainAspectRatio: false, // false로 설정 시 사용자 정의 크기에 따라 그래프 크기가 결정됨.\r\n\t};\r\n\r\n\tconst setRandomColorPie = new MakeRandomColor(4);\r\n\tconst { decideCnt, clearCnt, careCnt, deathCnt } = TODAY_DATE[0];\r\n\r\n\tconst pieData = {\r\n\t\tlabels: [\"확진자 수\", \"격리해제 수\", \"치료중 환자 수\", \"사망자 수\"],\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n\t\t\t\tdata: [decideCnt, clearCnt, careCnt, deathCnt],\r\n\t\t\t\tbackgroundColor: setRandomColorPie.setRgbaColor(),\r\n\t\t\t\tborderColor: setRandomColorPie.setRgbaColor(),\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\tconst pieOptions = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\t// display: false,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\txAxis: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t\tdrawTicks: false,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\t// display: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t\tdrawTicks: false,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tmaintainAspectRatio: false,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid templateRows=\"repeat(2,1fr)\" w=\"100%\" h=\"100%\">\r\n\t\t\t<Box p={4}>\r\n\t\t\t\t<Line data={data} options={options} />\r\n\t\t\t</Box>\r\n\t\t\t<Box p={4}>\r\n\t\t\t\t<Pie data={pieData} options={pieOptions} />\r\n\t\t\t</Box>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default Covid19StateChart;\r\n","import axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\nconsole.log(process.env.NODE_ENV);\r\n\r\nconst today: Date = new Date();\r\nconst year = today.getFullYear(); // 년도\r\nconst month = (\"0\" + (today.getMonth() + 1)).slice(-2); // 월\r\nconst month2 = (\"0\" + today.getMonth()).slice(-2); // 전월\r\nconst date = (\"0\" + today.getDate()).slice(-2);\r\nconst yesterday = (\"0\" + (today.getDate() - 1)).slice(-2);\r\n\r\nexport const getToday: string = `${year}${month}${date}`;\r\nexport const getYesterday: string = `${year}${month}${yesterday}`;\r\nexport const lastMonth: string = `${year}${month2}${date}`;\r\n\r\nconst SERVICE_KEY: string | undefined = process.env.REACT_APP_SERVICE_KEY;\r\n\r\nlet queryParams = \"?\" + encodeURIComponent(\"ServiceKey\") + \"=\" + SERVICE_KEY; /*Service Key*/\r\n// queryParams += \"&\" + encodeURIComponent(\"pageNo\") + \"=\" + encodeURIComponent(\"1\"); /* 페이지번호*/\r\n// queryParams += \"&\" + encodeURIComponent(\"numOfRows\") + \"=\" + encodeURIComponent(\"10\"); /* 한 페이지 결과 수 */\r\nqueryParams += \"&\" + encodeURIComponent(\"startCreateDt\") + \"=\" + encodeURIComponent(lastMonth); /* 검색할 생성일 시작 */\r\nqueryParams += \"&\" + encodeURIComponent(\"endCreateDt\") + \"=\" + encodeURIComponent(getToday); /* 검색할 생성일 종료 */\r\n\r\nconst fetchAPI = async (url: string) => {\r\n\treturn await axios({\r\n\t\tmethod: \"GET\",\r\n\t\turl: process.env.NODE_ENV === \"development\" ? `/openapi/service/rest/Covid19/${url + queryParams}` : `https://cors.bridged.cc/http://openapi.data.go.kr/openapi/service/rest/Covid19/${url + queryParams}`,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tresponse: {\r\n\t\t\t\t\t\tbody: {\r\n\t\t\t\t\t\t\titems: { item },\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t} = response;\r\n\t\t\treturn item;\r\n\t\t})\r\n\t\t.catch((error) => console.log(error));\r\n};\r\n\r\nexport const createPromiseThunk = (type: string) => {\r\n\tlet name: string = \"\";\r\n\tswitch (type) {\r\n\t\tcase \"OVERSEAS\":\r\n\t\t\tname = \"해외발생 현황\";\r\n\t\t\tbreak;\r\n\t\tcase \"SIDOINFO\":\r\n\t\t\tname = \"시·도발생 현황\";\r\n\t\t\tbreak;\r\n\t\tcase \"COVID19INFO\":\r\n\t\t\tname = \"감염 현황\";\r\n\t\t\tbreak;\r\n\t\tcase \"GENAGECASEINFO\":\r\n\t\t\tname = \"연령별·성별감염 현황\";\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\treturn ({ url, setLoadingState }: { url: string; setLoadingState?: any }) =>\r\n\t\tasync (dispatch: any): Promise<void> => {\r\n\t\t\ttry {\r\n\t\t\t\tconst payload = await fetchAPI(url);\r\n\t\t\t\tdispatch({ type: `${type}_SUCCESS`, payload });\r\n\t\t\t\tsetLoadingState && setLoadingState(false);\r\n\t\t\t\tconsole.log(`${name}: ${type}`, payload);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t};\r\n};\r\n","import { createPromiseThunk } from \"../asyncGetData\";\r\n\r\nconst COVID19INFO = \"COVID19INFO\";\r\nconst COVID19INFO_PENDING = \"COVID19INFO_PENDING\";\r\nconst COVID19INFO_SUCCESS = \"COVID19INFO_SUCCESS\";\r\n\r\nexport const covid19InfoDispatch: any = createPromiseThunk(COVID19INFO);\r\n\r\nexport type covid19InfoTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\taccDefRate: number;\r\n\t\t\taccExamCnt: number;\r\n\t\t\taccExamCompCnt: number;\r\n\t\t\tcareCnt: number;\r\n\t\t\tclearCnt: number;\r\n\t\t\tcreateDt: string;\r\n\t\t\tdeathCnt: number;\r\n\t\t\tdecideCnt: number;\r\n\t\t\texamCnt: number;\r\n\t\t\tresutlNegCnt: number;\r\n\t\t\tseq: number;\r\n\t\t\tstateDt: number;\r\n\t\t\tstateTime: string;\r\n\t\t\tupdateDt: string;\r\n\t\t}\r\n\t];\r\n};\r\n\r\nconst initialState: covid19InfoTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\taccDefRate: 0,\r\n\t\t\taccExamCnt: 0,\r\n\t\t\taccExamCompCnt: 0,\r\n\t\t\tcareCnt: 0,\r\n\t\t\tclearCnt: 0,\r\n\t\t\tcreateDt: \"\",\r\n\t\t\tdeathCnt: 0,\r\n\t\t\tdecideCnt: 0,\r\n\t\t\texamCnt: 0,\r\n\t\t\tresutlNegCnt: 0,\r\n\t\t\tseq: 0,\r\n\t\t\tstateDt: 0,\r\n\t\t\tstateTime: \"\",\r\n\t\t\tupdateDt: \"\",\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst covid19InfoData = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase COVID19INFO_PENDING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t};\r\n\t\tcase COVID19INFO_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default covid19InfoData;\r\n","import React from \"react\";\r\nimport { Flex, Spinner } from \"@chakra-ui/react\";\r\n\r\nconst SpinnerBox = () => {\r\n\treturn (\r\n\t\t<Flex justifyContent=\"center\" alignItems=\"center\" position=\"fixed\" left=\"0\" right=\"0\" top=\"0\" bottom=\"0\" background=\"gray.500\" opacity=\"0.7\">\r\n\t\t\t<Spinner thickness=\"4px\" speed=\"0.65s\" emptyColor=\"gray.200\" color=\"red.500\" size=\"xl\" />\r\n\t\t</Flex>\r\n\t);\r\n};\r\n\r\nexport default SpinnerBox;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Flex, Table, Thead, Tbody, Tr, Th, Td, TableCaption, Heading, Box } from \"@chakra-ui/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../Layout\";\r\nimport moment from \"moment\";\r\nimport Covid19StateChart from \"../chart/Covid19StateChart\";\r\nimport { covid19InfoDispatch } from \"../../redux/covid19InfooReducer\";\r\nimport SpinnerBox from \"../SpinnerBox\";\r\nimport styles from \"./Covid19State.module.css\";\r\nimport { getToday, getYesterday } from \"../../asyncGetData\";\r\n\r\nconst Covid19State = () => {\r\n\tconst { covid19InfooReducer } = useSelector((state: any) => ({ covid19InfooReducer: state.covid19InfooReducer.data }));\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst setLoadingState = (state: boolean) => {\r\n\t\tsetIsLoading(state);\r\n\t};\r\n\r\n\tconst STATE_DT =\r\n\t\tcovid19InfooReducer &&\r\n\t\tcovid19InfooReducer\r\n\t\t\t.map((item: any) => item.stateDt)\r\n\t\t\t.sort((a: number, b: number) => a - b)\r\n\t\t\t.slice(-15);\r\n\r\n\tconst DECIDE_CNT =\r\n\t\tcovid19InfooReducer &&\r\n\t\tcovid19InfooReducer\r\n\t\t\t.map((item: any) => item.decideCnt)\r\n\t\t\t.sort((a: number, b: number) => a - b)\r\n\t\t\t.slice(-15);\r\n\r\n\tconst TODAY_DATE = covid19InfooReducer && covid19InfooReducer.filter((item: { createDt: string }) => moment(item.createDt).format(\"YYYYMMDD\") === getToday || moment(item.createDt).format(\"YYYYMMDD\") === getYesterday);\r\n\r\n\tuseEffect(() => {\r\n\t\t// 코로나19 감염 현황\r\n\t\tdispatch(\r\n\t\t\tcovid19InfoDispatch({\r\n\t\t\t\turl: \"getCovid19InfStateJson\",\r\n\t\t\t\tsetLoadingState,\r\n\t\t\t})\r\n\t\t);\r\n\t}, []);\r\n\r\n\t// stateDt기준 데이터정렬 가공\r\n\tconst DECIDE_CNT_TODAY =\r\n\t\tcovid19InfooReducer &&\r\n\t\tcovid19InfooReducer\r\n\t\t\t.map((item: any) => item)\r\n\t\t\t.sort((a: any, b: any) => a.stateDt - b.stateDt)\r\n\t\t\t.slice(-15)\r\n\t\t\t.reverse();\r\n\r\n\t// 오늘확진자 수\r\n\tconst CONFIRMED_CASE = DECIDE_CNT_TODAY?.find((item: { stateDt: number }) => item.stateDt.toString() === moment(new Date()).format(\"YYYYMMDD\"));\r\n\tconst YESTERDAY_CONFIRMED_CASE = DECIDE_CNT_TODAY?.find((item: { stateDt: number }) => item.stateDt.toString() === (Number(moment(new Date()).format(\"YYYYMMDD\")) - 1).toString());\r\n\tconst TODAY_CONFIRMED_CASE = CONFIRMED_CASE?.decideCnt - YESTERDAY_CONFIRMED_CASE?.decideCnt;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading && <SpinnerBox />}\r\n\t\t\t{!isLoading && (\r\n\t\t\t\t<Layout title=\"감염 현황\">\r\n\t\t\t\t\t<Covid19StateChart STATE_DT={STATE_DT} DECIDE_CNT={DECIDE_CNT} TODAY_DATE={TODAY_DATE} />\r\n\t\t\t\t\t<Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\r\n\t\t\t\t\t\t<Heading size=\"md\" mb={4}>\r\n\t\t\t\t\t\t\t누적 데이터\r\n\t\t\t\t\t\t</Heading>\r\n\t\t\t\t\t\t<Box h=\"100%\" overflow=\"hidden\" overflowY=\"auto\" flex=\"1\">\r\n\t\t\t\t\t\t\t<Table variant=\"striped\" size=\"sm\" flex=\"1\">\r\n\t\t\t\t\t\t\t\t<TableCaption fontSize=\"md\">{isNaN(TODAY_CONFIRMED_CASE) ? \"매일 오전 10시 이후에 데이터 업데이트됩니다.\" : `오늘 확진자 수 : ${TODAY_CONFIRMED_CASE.toLocaleString()}명`}</TableCaption>\r\n\t\t\t\t\t\t\t\t<Thead>\r\n\t\t\t\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>기준일</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>확진자 수</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>격리해제 수</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>치료중 환자 수</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>사망자 수</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>확진률</Th>\r\n\t\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t\t</Thead>\r\n\t\t\t\t\t\t\t\t<Tbody>\r\n\t\t\t\t\t\t\t\t\t{DECIDE_CNT_TODAY &&\r\n\t\t\t\t\t\t\t\t\t\tDECIDE_CNT_TODAY.map((item: any) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Tr key={item.stateDt}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{moment(item.stateDt.toString()).format(\"YYYY-MM-DD\")}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{item.decideCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{item.clearCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{item.careCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{item.deathCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{Number(item.accDefRate).toFixed(2)}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Layout>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Covid19State;\r\n","import React from \"react\";\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport { Box, Grid, useColorModeValue } from \"@chakra-ui/react\";\r\nimport MakeRandomColor from \"../../util/MakeRandomColor\";\r\n\r\nconst SidoInfoStateChart = ({ DEF_CNT, GUBUN }: any) => {\r\n\ttype itemTypes = {\r\n\t\tcreateDt: string;\r\n\t\tdeathCnt: number;\r\n\t\tdefCnt: number;\r\n\t\tgubun: string;\r\n\t\tgubunCn: string;\r\n\t\tgubunEn: string;\r\n\t\tincDec: number;\r\n\t\tisolClearCnt: number;\r\n\t\tisolIngCnt: number;\r\n\t\tlocalOccCnt: number;\r\n\t\toverFlowCnt: number;\r\n\t\tqurRate: string;\r\n\t\tseq: number;\r\n\t\tstdDay: string;\r\n\t};\r\n\r\n\t// Random Color\r\n\t// let colorArray: string[] = [];\r\n\t// const randomColor = () => Math.floor(Math.random() * 255);\r\n\t// const setRgbaColor = (count: number) => {\r\n\t// \tfor (let i = 0; i < count; i++) {\r\n\t// \t\tcolorArray.push(`rgba(${randomColor()},${randomColor()},${randomColor()}, 0.7)`);\r\n\t// \t}\r\n\t// };\r\n\t// setRgbaColor(DEF_CNT?.length);\r\n\r\n\tconst setRandomColor = new MakeRandomColor(DEF_CNT?.length);\r\n\r\n\ttype dataTypes = {\r\n\t\tlabels: string[];\r\n\t\tdatasets: {\r\n\t\t\tlabel: string[] | string;\r\n\t\t\tdata: number[];\r\n\t\t\tbackgroundColor: string[];\r\n\t\t\tborderWidth: number;\r\n\t\t}[];\r\n\t};\r\n\r\n\tconst data: dataTypes = {\r\n\t\tlabels: GUBUN,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: GUBUN,\r\n\t\t\t\tdata: DEF_CNT?.filter((filItem: itemTypes) => filItem.gubun !== \"합계\").map((item: itemTypes) => item.defCnt),\r\n\t\t\t\tbackgroundColor: setRandomColor.setRgbaColor(),\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst lineGraph = useColorModeValue(\"rgba(229, 229, 229)\", \"rgba(255,255,255,0.5)\");\r\n\tconst ticksColor = useColorModeValue(\"gray.200\", \"#fff\");\r\n\r\n\tconst options = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\t// display: false,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\txAxis: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tmaintainAspectRatio: false,\r\n\t};\r\n\r\n\tconst barData: dataTypes = {\r\n\t\tlabels: GUBUN,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"지역별 현황\",\r\n\t\t\t\tdata: DEF_CNT?.filter((filItem: itemTypes) => filItem.gubun !== \"합계\").map((item: itemTypes) => item.defCnt),\r\n\t\t\t\tbackgroundColor: setRandomColor.setRgbaColor(),\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst barOptions = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false, // label 숨기기\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\txAxis: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tmaintainAspectRatio: false,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid templateRows=\"repeat(2,1fr)\" w=\"100%\" h=\"100%\">\r\n\t\t\t<Box p={4}>\r\n\t\t\t\t<Doughnut data={data} options={options} />\r\n\t\t\t</Box>\r\n\t\t\t<Box p={4}>\r\n\t\t\t\t<Bar data={barData} options={barOptions} />\r\n\t\t\t</Box>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default SidoInfoStateChart;\r\n","import { createPromiseThunk } from \"../asyncGetData\";\r\n\r\nconst SIDOINFO = \"SIDOINFO\";\r\nconst SIDOINFO_SUCCESS = \"SIDOINFO_SUCCESS\";\r\n\r\nexport const sidoInfoDispatch: any = createPromiseThunk(SIDOINFO);\r\n\r\ntype sidoDataTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\tcreateDt: string;\r\n\t\t\tdeathCnt: number;\r\n\t\t\tdefCnt: number;\r\n\t\t\tgubun: string;\r\n\t\t\tgubunCn: string;\r\n\t\t\tgubunEn: string;\r\n\t\t\tincDec: number;\r\n\t\t\tisolClearCnt: number;\r\n\t\t\tisolIngCnt: number;\r\n\t\t\tlocalOccCnt: number;\r\n\t\t\toverFlowCnt: number;\r\n\t\t\tqurRate: string;\r\n\t\t\tseq: number;\r\n\t\t\tstdDay: string;\r\n\t\t\tupdateDt: string;\r\n\t\t}\r\n\t];\r\n};\r\n\r\nconst initialState: sidoDataTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\tcreateDt: \"\",\r\n\t\t\tdeathCnt: 0,\r\n\t\t\tdefCnt: 0,\r\n\t\t\tgubun: \"\",\r\n\t\t\tgubunCn: \"\",\r\n\t\t\tgubunEn: \"\",\r\n\t\t\tincDec: 0,\r\n\t\t\tisolClearCnt: 0,\r\n\t\t\tisolIngCnt: 0,\r\n\t\t\tlocalOccCnt: 0,\r\n\t\t\toverFlowCnt: 0,\r\n\t\t\tqurRate: \"\",\r\n\t\t\tseq: 0,\r\n\t\t\tstdDay: \"\",\r\n\t\t\tupdateDt: \"\",\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst getSIDOINFOData = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase SIDOINFO_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default getSIDOINFOData;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Flex, Table, Thead, Tbody, Tr, Th, Td, TableCaption, Heading, Box } from \"@chakra-ui/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../Layout\";\r\nimport moment from \"moment\";\r\nimport SidoInfoStateChart from \"../chart/SidoInfoStateChart\";\r\nimport { sidoInfoDispatch } from \"../../redux/sidoInfoReducer\";\r\nimport SpinnerBox from \"../SpinnerBox\";\r\nimport styles from \"./SidoInfoState.module.css\";\r\n\r\nexport type sidoItemTypes = {\r\n\tcreateDt: string;\r\n\tdeathCnt: number;\r\n\tdefCnt: number;\r\n\tgubun: string;\r\n\tgubunCn: string;\r\n\tgubunEn: string;\r\n\tincDec: number;\r\n\tisolClearCnt: number;\r\n\tisolIngCnt: number;\r\n\tlocalOccCnt: number;\r\n\toverFlowCnt: number;\r\n\tqurRate: string;\r\n\tseq: number;\r\n\tstdDay: string;\r\n};\r\n\r\nconst Covid19State = () => {\r\n\tconst { sidoInfoReducer } = useSelector((state: any) => ({ sidoInfoReducer: state.sidoInfoReducer.data }));\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst setLoadingState = (state: boolean) => {\r\n\t\tsetIsLoading(state);\r\n\t};\r\n\r\n\tconst DEF_CNT = sidoInfoReducer\r\n\t\t?.map((item: sidoItemTypes) => item)\r\n\t\t.sort((a: any, b: any) => Number(moment(a.createDt).format(\"YYYYMMDD\")) - Number(moment(b.createDt).format(\"YYYYMMDD\")))\r\n\t\t.slice(-18);\r\n\r\n\t// 도시명\r\n\tconst GUBUN = DEF_CNT?.filter((filItem: sidoItemTypes) => filItem.gubun !== \"합계\").map((item: sidoItemTypes) => item.gubun);\r\n\r\n\t// 한글소팅\r\n\tconst hangleSort = DEF_CNT?.map((item: sidoItemTypes) => item).sort((a: sidoItemTypes, b: sidoItemTypes) => {\r\n\t\tconst item1: string = a.gubun;\r\n\t\tconst item2: string = b.gubun;\r\n\t\treturn item1.localeCompare(item2);\r\n\t});\r\n\r\n\t// 기준날짜\r\n\tconst currentDay = DEF_CNT?.find((day: { createDt: string }) => moment(day.createDt).format(\"YYYYMMDD\"));\r\n\r\n\tuseEffect(() => {\r\n\t\t// 코로나19 시·도발생 현황\r\n\t\tdispatch(\r\n\t\t\tsidoInfoDispatch({\r\n\t\t\t\turl: \"getCovid19SidoInfStateJson\",\r\n\t\t\t\tsetLoadingState,\r\n\t\t\t})\r\n\t\t);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading && <SpinnerBox />}\r\n\t\t\t{!isLoading && (\r\n\t\t\t\t<Layout title=\"시·도발생 현황 (확진자 수)\">\r\n\t\t\t\t\t<SidoInfoStateChart DEF_CNT={DEF_CNT} GUBUN={GUBUN} isLoading={isLoading} sidoInfoReducer={sidoInfoReducer && sidoInfoReducer} />\r\n\t\t\t\t\t<Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\r\n\t\t\t\t\t\t<Heading size=\"md\" mb={4}>\r\n\t\t\t\t\t\t\t시·도발생 현황\r\n\t\t\t\t\t\t</Heading>\r\n\r\n\t\t\t\t\t\t<Box h=\"100%\" overflow=\"hidden\" overflowY=\"auto\" flex=\"1\">\r\n\t\t\t\t\t\t\t<Table variant=\"striped\" size=\"sm\" w=\"100%\">\r\n\t\t\t\t\t\t\t\t<TableCaption fontSize=\"md\">{`${moment(currentDay?.createDt).format(\"YYYY-MM-DD\")}`}</TableCaption>\r\n\t\t\t\t\t\t\t\t<Thead>\r\n\t\t\t\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>도시명</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>확진자 수</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>격리중 환자수</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>격리 해제 수</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>전일대비 증감 수</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>해외유입 수</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>지역발생 수</Th>\r\n\t\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t\t</Thead>\r\n\t\t\t\t\t\t\t\t<Tbody>\r\n\t\t\t\t\t\t\t\t\t{hangleSort?.map((city: sidoItemTypes) => (\r\n\t\t\t\t\t\t\t\t\t\t<Tr key={city.gubun}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{city.gubun.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{city.defCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{city.isolIngCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{city.isolClearCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{city.incDec.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{city.overFlowCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{city.localOccCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Layout>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Covid19State;\r\n","import { Box, Grid, useColorModeValue } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport MakeRandomColor from \"../../util/MakeRandomColor\";\r\n\r\nconst GenAgeCaseInfoChart = ({ CREACT_DT }: any) => {\r\n\tconst CONF_CASE = CREACT_DT.map((conf: { confCase: number }) => conf.confCase);\r\n\tconst CONF_CASE_RATE = CREACT_DT.map((conf: { confCaseRate: number }) => conf.confCaseRate);\r\n\tconst GUBUN = CREACT_DT.map((ctg: { gubun: string }) => ctg.gubun);\r\n\r\n\tconst lineGraph = useColorModeValue(\"rgba(229, 229, 229)\", \"rgba(255,255,255,0.5)\");\r\n\tconst ticksColor = useColorModeValue(\"gray.200\", \"#fff\");\r\n\r\n\tconst setRandomColor = new MakeRandomColor(CREACT_DT.length);\r\n\r\n\tconst data = {\r\n\t\tlabels: GUBUN,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"확진자\",\r\n\t\t\t\tdata: CONF_CASE,\r\n\t\t\t\tbackgroundColor: setRandomColor.setRgbaColor(),\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tindexAxis: \"y\",\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\txAxis: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tmaintainAspectRatio: false,\r\n\t};\r\n\r\n\tconst lineData = {\r\n\t\tlabels: GUBUN,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"확진률\",\r\n\t\t\t\tdata: CONF_CASE_RATE,\r\n\t\t\t\tbackgroundColor: setRandomColor.setRgbaColor(),\r\n\t\t\t\tborderColor: setRandomColor.setRgbaColor(),\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid templateRows=\"repeat(2,1fr)\" w=\"100%\" h=\"100%\">\r\n\t\t\t<Box p={4}>\r\n\t\t\t\t<Bar data={data} options={options} />\r\n\t\t\t</Box>\r\n\t\t\t<Box p={4}>\r\n\t\t\t\t<Line data={lineData} options={options} />\r\n\t\t\t</Box>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default GenAgeCaseInfoChart;\r\n","import { createPromiseThunk } from \"../asyncGetData\";\r\n\r\nconst GENAGECASEINFO = \"GENAGECASEINFO\";\r\nconst GENAGECASEINFO_SUCCESS = \"GENAGECASEINFO_SUCCESS\";\r\n\r\nexport const genAgeCaseInfoDispatch: any = createPromiseThunk(GENAGECASEINFO);\r\n\r\ntype genAgeTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\tconfCase: number;\r\n\t\t\tconfCaseRate: number;\r\n\t\t\tcreateDt: string;\r\n\t\t\tcriticalRate: number;\r\n\t\t\tdeath: number;\r\n\t\t\tdeathRate: string;\r\n\t\t\tgubun: string;\r\n\t\t\tseq: number;\r\n\t\t\tupdateDt: string;\r\n\t\t}\r\n\t];\r\n};\r\n\r\nconst initialState: genAgeTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\tconfCase: 8915,\r\n\t\t\tconfCaseRate: 4.76,\r\n\t\t\tcreateDt: \"2021-07-24 14:19:04.902\",\r\n\t\t\tcriticalRate: 0,\r\n\t\t\tdeath: 0,\r\n\t\t\tdeathRate: \"0.00\",\r\n\t\t\tgubun: \"0-9\",\r\n\t\t\tseq: 10420,\r\n\t\t\tupdateDt: \"null\",\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst genAgeCaseInfoData = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase GENAGECASEINFO_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default genAgeCaseInfoData;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Flex, Table, Thead, Tbody, Tr, Th, Td, TableCaption, Heading, Box } from \"@chakra-ui/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport GenAgeCaseInfoChart from \"../chart/GenAgeCaseInfoChart\";\r\nimport Layout from \"../Layout\";\r\nimport SpinnerBox from \"../SpinnerBox\";\r\nimport { genAgeCaseInfoDispatch } from \"../../redux/genAgeCaseInfoReducer\";\r\nimport moment from \"moment\";\r\nimport styles from \"./GenAgeCaseInfo.module.css\";\r\n\r\ntype genAgeTypes = {\r\n\tconfCase: number;\r\n\tconfCaseRate: number;\r\n\tcreateDt: string;\r\n\tcriticalRate: number;\r\n\tdeath: number;\r\n\tdeathRate: number;\r\n\tgubun: string;\r\n\tseq: number;\r\n};\r\n\r\nconst GenAgeCaseInfo = () => {\r\n\tconst { genAgeCaseInfoReducer } = useSelector((state: any) => ({ genAgeCaseInfoReducer: state.genAgeCaseInfoReducer.data }));\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst setLoadingState = (state: boolean) => {\r\n\t\tsetIsLoading(state);\r\n\t};\r\n\r\n\tconst CREACT_DT =\r\n\t\tgenAgeCaseInfoReducer &&\r\n\t\tgenAgeCaseInfoReducer\r\n\t\t\t.map((date: genAgeTypes) => date)\r\n\t\t\t.sort((a: genAgeTypes, b: genAgeTypes) => Number(moment(a.createDt).format(\"YYYYMMDD\")) - Number(moment(b.createDt).format(\"YYYYMMDD\")))\r\n\t\t\t.slice(-11);\r\n\r\n\tuseEffect(() => {\r\n\t\t// 코로나19 연령별·성별감염 현황\r\n\t\tdispatch(\r\n\t\t\tgenAgeCaseInfoDispatch({\r\n\t\t\t\turl: \"getCovid19GenAgeCaseInfJson\",\r\n\t\t\t\tsetLoadingState,\r\n\t\t\t})\r\n\t\t);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading && <SpinnerBox />}\r\n\t\t\t{!isLoading && (\r\n\t\t\t\t<Layout title=\"연령별·성별감염 현황\">\r\n\t\t\t\t\t<GenAgeCaseInfoChart genAgeCaseInfoReducer={genAgeCaseInfoReducer && genAgeCaseInfoReducer} CREACT_DT={CREACT_DT} />\r\n\t\t\t\t\t<Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\r\n\t\t\t\t\t\t<Heading size=\"md\" mb={4}>\r\n\t\t\t\t\t\t\t누적 데이터\r\n\t\t\t\t\t\t</Heading>\r\n\r\n\t\t\t\t\t\t<Box h=\"100%\" overflow=\"hidden\" overflowY=\"auto\" flex=\"1\">\r\n\t\t\t\t\t\t\t<Table variant=\"striped\" size=\"sm\" w=\"100%\">\r\n\t\t\t\t\t\t\t\t<TableCaption fontSize=\"md\"></TableCaption>\r\n\t\t\t\t\t\t\t\t<Thead>\r\n\t\t\t\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>구분(성별, 연령별)</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>확진자</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>확진률</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>사망자</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>사망률</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>치명률</Th>\r\n\t\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t\t</Thead>\r\n\t\t\t\t\t\t\t\t<Tbody>\r\n\t\t\t\t\t\t\t\t\t{CREACT_DT?.map((genAge: genAgeTypes) => {\r\n\t\t\t\t\t\t\t\t\t\tconst { gubun, confCase, confCaseRate, death, deathRate, criticalRate } = genAge;\r\n\t\t\t\t\t\t\t\t\t\tconst genAgeType = gubun.indexOf(\"남성\") > -1 || gubun.indexOf(\"여성\") > -1 || gubun.indexOf(\"80 이상\") > -1 ? gubun : `${gubun}세`;\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<Tr key={gubun}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{genAgeType}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{confCase.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{confCaseRate.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{death.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{deathRate.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{criticalRate.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</Tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Layout>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GenAgeCaseInfo;\r\n","import { createPromiseThunk } from \"../asyncGetData\";\r\nimport { overSeasTypes } from \"../component/pages/NatInfoState\";\r\n\r\nconst OVERSEAS = \"OVERSEAS\";\r\nconst OVERSEAS_SUCCESS = \"OVERSEAS_SUCCESS\";\r\n\r\nexport const overseasDispatch: any = createPromiseThunk(OVERSEAS);\r\n\r\nconst initialState: overSeasTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\tareaNm: \"\",\r\n\t\t\tareaNmCn: \"\",\r\n\t\t\tareaNmEn: \"\",\r\n\t\t\tcreateDt: \"\",\r\n\t\t\tnatDeathCnt: 0,\r\n\t\t\tnatDeathRate: 0,\r\n\t\t\tnatDefCnt: 0,\r\n\t\t\tnationNm: \"\",\r\n\t\t\tnationNmCn: \"\",\r\n\t\t\tnationNmEn: \"\",\r\n\t\t\tseq: 0,\r\n\t\t\tstdDay: \"\",\r\n\t\t\tupdateDt: \"\",\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst getOverseasData = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase OVERSEAS_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default getOverseasData;\r\n","import { useColorModeValue } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport MakeRandomColor from \"../../util/MakeRandomColor\";\r\n\r\ntype dataTypes = {\r\n\tlabels: string[];\r\n\tdatasets: {\r\n\t\taxis: string;\r\n\t\tlabel: string[] | string;\r\n\t\tdata: number[];\r\n\t\tfill: boolean;\r\n\t\tbackgroundColor: string[];\r\n\t\tborderColor: string[];\r\n\t\tborderWidth: number;\r\n\t}[];\r\n};\r\n\r\nconst NatInfoStateChart = ({ CREATE_DT }: any) => {\r\n\tconst NATIONAL = CREATE_DT.filter((item: any) => item.nationNm === \"한국\" || item.nationNm === \"대만\" || item.nationNm === \"중국\" || item.nationNm === \"베트남\" || item.nationNm === \"일본\" || item.nationNm === \"뉴질랜드\" || item.nationNm === \"태국\");\r\n\r\n\tconst NATIONAL_DATA = NATIONAL.map((item: any) => item.natDefCnt);\r\n\tconst NATIONAL_NAME = NATIONAL.map((item: any) => item.nationNm);\r\n\r\n\tconst lineGraph = useColorModeValue(\"rgba(229, 229, 229)\", \"rgba(255,255,255,0.5)\");\r\n\tconst ticksColor = useColorModeValue(\"gray.200\", \"#fff\");\r\n\r\n\tconst setRandomColor = new MakeRandomColor(NATIONAL.length);\r\n\r\n\tconst data: dataTypes = {\r\n\t\tlabels: NATIONAL_NAME,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\taxis: \"y\",\r\n\t\t\t\tlabel: \"확진자 수\",\r\n\t\t\t\tdata: NATIONAL_DATA,\r\n\t\t\t\tfill: false,\r\n\t\t\t\tbackgroundColor: setRandomColor.setRgbaColor(),\r\n\t\t\t\tborderColor: setRandomColor.setRgbaColor(),\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tindexAxis: \"y\",\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\txAxis: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tborderColor: lineGraph,\r\n\t\t\t\t\tcolor: lineGraph,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcolor: ticksColor,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tmaintainAspectRatio: false,\r\n\t};\r\n\r\n\treturn <Bar data={data} options={options} />;\r\n};\r\n\r\nexport default NatInfoStateChart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Flex, Heading, Table, TableCaption, Tbody, Td, Th, Thead, Tr } from \"@chakra-ui/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { overseasDispatch } from \"../../redux/overseasReducer\";\r\nimport Layout from \"../Layout\";\r\nimport SpinnerBox from \"../SpinnerBox\";\r\nimport moment from \"moment\";\r\nimport styles from \"./NatInfoState.module.css\";\r\nimport NatInfoStateChart from \"../chart/NatInfoStateChart\";\r\n\r\nexport type overSeasTypes = {\r\n\tdata: [\r\n\t\t{\r\n\t\t\tareaNm: string;\r\n\t\t\tareaNmCn: string;\r\n\t\t\tareaNmEn: string;\r\n\t\t\tcreateDt: string;\r\n\t\t\tnatDeathCnt: number;\r\n\t\t\tnatDeathRate: number;\r\n\t\t\tnatDefCnt: number;\r\n\t\t\tnationNm: string;\r\n\t\t\tnationNmCn: string;\r\n\t\t\tnationNmEn: string;\r\n\t\t\tseq: number;\r\n\t\t\tstdDay: string;\r\n\t\t\tupdateDt: string;\r\n\t\t}\r\n\t];\r\n};\r\n\r\nconst NatInfoState = () => {\r\n\tconst { overseasReducer } = useSelector((state: any) => ({ overseasReducer: state.overseasReducer.data }));\r\n\tconst dispatch = useDispatch();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst setLoadingState = (state: boolean) => {\r\n\t\tsetIsLoading(state);\r\n\t};\r\n\r\n\tconst CREATE_DT =\r\n\t\toverseasReducer &&\r\n\t\toverseasReducer\r\n\t\t\t.map((date: overSeasTypes) => date)\r\n\t\t\t.sort((a: { createDt: string }, b: { createDt: string }) => Number(moment(a.createDt)) - Number(moment(b.createDt)))\r\n\t\t\t.slice(-190);\r\n\r\n\tuseEffect(() => {\r\n\t\t// 코로나19 시·도발생 현황\r\n\t\tdispatch(\r\n\t\t\toverseasDispatch({\r\n\t\t\t\turl: \"getCovid19NatInfStateJson\",\r\n\t\t\t\tsetLoadingState,\r\n\t\t\t})\r\n\t\t);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading && <SpinnerBox />}\r\n\t\t\t{!isLoading && (\r\n\t\t\t\t<Layout title=\"해외발생 현황\">\r\n\t\t\t\t\t<NatInfoStateChart isLoading={isLoading} CREATE_DT={CREATE_DT} />\r\n\t\t\t\t\t<Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\r\n\t\t\t\t\t\t<Heading size=\"md\" mb={4}>\r\n\t\t\t\t\t\t\t해외발생 현황\r\n\t\t\t\t\t\t</Heading>\r\n\r\n\t\t\t\t\t\t<Box h=\"100%\" overflow=\"hidden\" overflowY=\"auto\" flex=\"1\">\r\n\t\t\t\t\t\t\t<Table variant=\"striped\" size=\"sm\" w=\"100%\" className={styles.table}>\r\n\t\t\t\t\t\t\t\t<TableCaption fontSize=\"md\">코로나19 해외발생 현황</TableCaption>\r\n\t\t\t\t\t\t\t\t<Thead>\r\n\t\t\t\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>국가명</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>지역명</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>국가별 확진자 수</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>국가별 사망자 수</Th>\r\n\t\t\t\t\t\t\t\t\t\t<Th className={styles.th}>확진률 대비 사망률</Th>\r\n\t\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t\t</Thead>\r\n\t\t\t\t\t\t\t\t<Tbody>\r\n\t\t\t\t\t\t\t\t\t{CREATE_DT?.map((item: any) => {\r\n\t\t\t\t\t\t\t\t\t\tconst { areaNm, natDeathCnt, natDeathRate, natDefCnt, nationNm, nationNmEn } = item;\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<Tr key={nationNm} className={(nationNm === \"일본\" && styles.special) || (nationNm === \"한국\" && styles.special)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{nationNm} ({nationNmEn})\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{areaNm}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{natDefCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{natDeathCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Td>{Number(natDeathRate).toFixed(2)}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</Tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Layout>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default NatInfoState;\r\n","import * as React from \"react\";\r\nimport { ChakraProvider, Flex, theme } from \"@chakra-ui/react\";\r\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\r\nimport Header from \"./component/Header\";\r\nimport Footer from \"./component/Footer\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport Covid19State from \"./component/pages/Covid19State\";\r\nimport SidoInfoState from \"./component/pages/SidoInfoState\";\r\nimport GenAgeCaseInfo from \"./component/pages/GenAgeCaseInfo\";\r\nimport NatInfoState from \"./component/pages/NatInfoState\";\r\n\r\nexport const App = () => {\r\n\treturn (\r\n\t\t<ChakraProvider theme={theme}>\r\n\t\t\t<Flex flexDirection=\"column\" w=\"100vw\" h=\"100vh\">\r\n\t\t\t\t<Flex justifyContent=\"space-between\" alignItems=\"center\" px={4} borderBottomWidth=\"1px\" borderColor=\"gray.200\" boxShadow=\"md\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<ColorModeSwitcher />\r\n\t\t\t\t</Flex>\r\n\r\n\t\t\t\t<Route path=\"/\" exact component={Covid19State} />\r\n\t\t\t\t<Route path=\"/SidoInfoState\" component={SidoInfoState} />\r\n\t\t\t\t<Route path=\"/GenAgeCaseInfo\" component={GenAgeCaseInfo} />\r\n\t\t\t\t<Route path=\"/NatInfoState\" component={NatInfoState} />\r\n\r\n\t\t\t\t<Footer />\r\n\t\t\t</Flex>\r\n\t\t</ChakraProvider>\r\n\t);\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport overseasReducer from \"./overseasReducer\"; // 코로나19해외발생 현황 상세설명\r\nimport sidoInfoReducer from \"./sidoInfoReducer\"; // 코로나19 시·도발생 현황\r\nimport genAgeCaseInfoReducer from \"./genAgeCaseInfoReducer\"; // 코로나19 연령별·성별감염 현황\r\nimport covid19InfooReducer from \"./covid19InfooReducer\"; // 코로나19 감염 현황\r\nconst RootReducer = combineReducers({ overseasReducer, sidoInfoReducer, genAgeCaseInfoReducer, covid19InfooReducer });\r\n\r\nexport default RootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport RootReducer from \"./reducers\";\r\n\r\nconst store = createStore(RootReducer, applyMiddleware(ReduxThunk));\r\n\r\nexport default store;\r\n","import { ColorModeScript } from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport store from \"./redux/\";\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<ColorModeScript />\r\n\t\t<Provider store={store}>\r\n\t\t\t{process.env.NODE_ENV === \"development\" && (\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<App />\r\n\t\t\t\t</BrowserRouter>\r\n\t\t\t)}\r\n\t\t\t{process.env.NODE_ENV === \"production\" && (\r\n\t\t\t\t<HashRouter>\r\n\t\t\t\t\t<App />\r\n\t\t\t\t</HashRouter>\r\n\t\t\t)}\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"NatInfoState_table__3BvyX\",\"special\":\"NatInfoState_special__3IlSg\",\"th\":\"NatInfoState_th__3Ul0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"th\":\"SidoInfoState_th__t7EBR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"th\":\"Covid19State_th__x1xTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"th\":\"GenAgeCaseInfo_th__2R_5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__1EbOM\",\"ul\":\"Header_ul__10bTk\",\"unList\":\"Header_unList__Kc8Bs\"};"],"sourceRoot":""}