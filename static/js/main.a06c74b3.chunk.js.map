{"version":3,"sources":["component/Header.module.css","ColorModeSwitcher.tsx","component/Header.tsx","component/Footer.tsx","component/Layout.tsx","component/chart/CovidTotalState.tsx","asyncGetData.ts","redux/covid19InfooReducer.ts","component/SpinnerBox.tsx","component/pages/Covid19State.tsx","component/chart/SidoInfoStateChart.tsx","redux/sidoInfoReducer.ts","component/pages/SidoInfoState.tsx","component/chart/GenAgeCaseInfoChart.tsx","redux/genAgeCaseInfoReducer.ts","component/pages/GenAgeCaseInfo.tsx","App.tsx","redux/overseasReducer.ts","redux/reducers.ts","redux/index.ts","index.tsx"],"names":["module","exports","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","Header","justifyContent","alignItems","className","styles","covid19","src","alt","width","nav","to","Footer","p","align","href","target","Layout","children","title","as","minChildWidth","gap","h","Array","map","child","index","w","boxShadow","CovidTotalState","covid19InfooReducer","STATE_DT","item","stateDt","sort","a","b","slice","DECIDE_CNT","decideCnt","data","labels","date","toString","substring","datasets","label","backgroundColor","borderColor","borderWidth","options","legend","display","scales","yAxes","ticks","min","stepSize","maintainAspectRatio","dotenv","config","console","log","process","today","Date","year","getFullYear","month","getMonth","getDate","getToday","queryParams","encodeURIComponent","fetchAPI","url","axios","method","then","response","body","items","catch","error","createPromiseThunk","type","name","setLoadingState","dispatch","payload","COVID19INFO_PENDING","COVID19INFO_SUCCESS","covid19InfoDispatch","initialState","accDefRate","accExamCnt","accExamCompCnt","careCnt","clearCnt","createDt","deathCnt","examCnt","resutlNegCnt","seq","stateTime","updateDt","covid19InfoData","state","action","SpinnerBox","position","left","right","top","bottom","background","opacity","thickness","speed","emptyColor","Covid19State","useSelector","useDispatch","useState","isLoading","setIsLoading","useEffect","DECIDE_CNT_TODAY","reverse","CONFIRMED_CASE","find","moment","format","YESTERDAY_CONFIRMED_CASE","Number","TODAY_CONFIRMED_CASE","flexDirection","mb","flex","isNaN","toLocaleString","toFixed","SidoInfoStateChart","DEF_CNT","GUBUN","colorArray","randomColor","Math","floor","random","count","i","push","setRgbaColor","length","filter","filItem","gubun","defCnt","barData","templateRows","plugins","SIDOINFO_SUCCESS","sidoInfoDispatch","getSIDOINFOData","sidoInfoReducer","currentDay","day","city","isolIngCnt","isolClearCnt","incDec","overFlowCnt","localOccCnt","GenAgeCaseInfoChart","CREACT_DT","CONF_CASE","conf","confCase","CONF_CASE_RATE","confCaseRate","ctg","indexAxis","lineData","GENAGECASEINFO_SUCCESS","genAgeCaseInfoDispatch","genAgeCaseInfoData","GenAgeCaseInfo","genAgeCaseInfoReducer","genAge","death","deathRate","criticalRate","genAgeType","indexOf","App","theme","px","borderBottomWidth","path","exact","component","SidoInfoState","OVERSEAS_SUCCESS","getOverseasData","RootReducer","combineReducers","overseasReducer","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a06c74b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__1EbOM\"};","import * as React from \"react\"\r\nimport {\r\n  useColorMode,\r\n  useColorModeValue,\r\n  IconButton,\r\n  IconButtonProps,\r\n} from \"@chakra-ui/react\"\r\nimport { FaMoon, FaSun } from \"react-icons/fa\"\r\n\r\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\r\n\r\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\r\n  const { toggleColorMode } = useColorMode()\r\n  const text = useColorModeValue(\"dark\", \"light\")\r\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\r\n\r\n  return (\r\n    <IconButton\r\n      size=\"md\"\r\n      fontSize=\"lg\"\r\n      variant=\"ghost\"\r\n      color=\"current\"\r\n      marginLeft=\"2\"\r\n      onClick={toggleColorMode}\r\n      icon={<SwitchIcon />}\r\n      aria-label={`Switch to ${text} mode`}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Header.module.css\";\r\nimport alex from \"./images/alex.jpg\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t<img className={styles.covid19} src=\"./images/alex.jpg\" alt=\"alex\" width=\"60px\" />\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<ul className={styles.nav}>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"/\">코로나19 감염 현황</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"/SidoInfoState\">시·도발생 현황</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"/GenAgeCaseInfo\">연령별·성별감염 현황</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>해외발생 현황</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</nav>\r\n\t\t\t</Flex>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { Box } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<Box p={4} align=\"center\">\r\n\t\t\t제공: 공공데이터포털 (\r\n\t\t\t<a href=\"https://www.data.go.kr/index.do\" target=\"_blank\">\r\n\t\t\t\thttps://www.data.go.kr/index.do\r\n\t\t\t</a>\r\n\t\t\t)<p>Copyright © alexsando. All Rights Reserved.</p>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Box, Flex, Grid, Heading, SimpleGrid } from \"@chakra-ui/react\";\r\n\r\ninterface childrenProps {\r\n\tchildren: JSX.Element[] | JSX.Element;\r\n\ttitle: string;\r\n}\r\n\r\nconst Layout = ({ children, title }: childrenProps) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Heading as=\"h2\" size=\"md\" p={4}>\r\n\t\t\t\t{title}\r\n\t\t\t</Heading>\r\n\t\t\t<SimpleGrid minChildWidth=\"640px\" gap={6} h=\"100%\" p={4}>\r\n\t\t\t\t{children instanceof Array &&\r\n\t\t\t\t\tchildren.map((child, index) => (\r\n\t\t\t\t\t\t<Flex alignItems=\"center\" key={index} w=\"100%\" h=\"100%\" p={4} boxShadow=\"base\">\r\n\t\t\t\t\t\t\t{child}\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t))}\r\n\t\t\t</SimpleGrid>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Layout;\r\n","import { Line } from \"react-chartjs-2\";\r\n\r\nconst CovidTotalState = ({ covid19InfooReducer }: any) => {\r\n\tconst STATE_DT =\r\n\t\tcovid19InfooReducer &&\r\n\t\tcovid19InfooReducer\r\n\t\t\t.map((item: any) => item.stateDt)\r\n\t\t\t.sort((a: number, b: number) => a - b)\r\n\t\t\t.slice(-15);\r\n\r\n\tconst DECIDE_CNT =\r\n\t\tcovid19InfooReducer &&\r\n\t\tcovid19InfooReducer\r\n\t\t\t.map((item: any) => item.decideCnt)\r\n\t\t\t.sort((a: number, b: number) => a - b)\r\n\t\t\t.slice(-15);\r\n\r\n\ttype dataTypes = {\r\n\t\tlabels: string[];\r\n\t\tdatasets: {\r\n\t\t\tlabel: string;\r\n\t\t\tdata: number[];\r\n\t\t\tbackgroundColor: string[];\r\n\t\t\tborderColor: string[];\r\n\t\t\tborderWidth: number;\r\n\t\t}[];\r\n\t};\r\n\r\n\tconst data: dataTypes = {\r\n\t\tlabels: STATE_DT && STATE_DT.map((date: number): string => `${date.toString().slice(4).substring(0, 2)}/${date.toString().slice(4).substring(2)}`),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"누적 확진자수\",\r\n\t\t\t\tdata: DECIDE_CNT,\r\n\t\t\t\tbackgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\r\n\t\t\t\tborderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tlegend: {\r\n\t\t\tdisplay: false, // label 숨기기\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\tyAxes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tmin: 0, // 스케일에 대한 최솟갓 설정, 0 부터 시작\r\n\t\t\t\t\t\tstepSize: 1, // 스케일에 대한 사용자 고정 정의 값\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\tmaintainAspectRatio: false, // false로 설정 시 사용자 정의 크기에 따라 그래프 크기가 결정됨.\r\n\t};\r\n\r\n\treturn <Line data={data} options={options} />;\r\n};\r\n\r\nexport default CovidTotalState;\r\n","import axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\nconsole.log(process.env.NODE_ENV);\r\n\r\nconst today: Date = new Date();\r\nconst year = today.getFullYear(); // 년도\r\nconst month = (\"0\" + (today.getMonth() + 1)).slice(-2); // 월\r\nconst date = (\"0\" + today.getDate()).slice(-2);\r\n\r\nconst getToday: string = `${year}${month}${date}`;\r\n\r\nconst SERVICE_KEY: string | undefined = process.env.REACT_APP_SERVICE_KEY;\r\n\r\nlet queryParams = \"?\" + encodeURIComponent(\"ServiceKey\") + \"=\" + SERVICE_KEY; /*Service Key*/\r\nqueryParams += \"&\" + encodeURIComponent(\"pageNo\") + \"=\" + encodeURIComponent(\"1\"); /* 페이지번호*/\r\nqueryParams += \"&\" + encodeURIComponent(\"numOfRows\") + \"=\" + encodeURIComponent(\"10\"); /* 한 페이지 결과 수 */\r\nqueryParams += \"&\" + encodeURIComponent(\"startCreateDt\") + \"=\" + encodeURIComponent(\"20200310\"); /* 검색할 생성일 시작 */\r\nqueryParams += \"&\" + encodeURIComponent(\"endCreateDt\") + \"=\" + encodeURIComponent(getToday); /* 검색할 생성일 종료 */\r\n\r\nconst fetchAPI = async (url: string) => {\r\n\tconst BASE_URL = process.env.NODE_ENV === \"development\" ? \"\" : \"http://openapi.data.go.kr\";\r\n\r\n\treturn await axios({\r\n\t\tmethod: \"GET\",\r\n\t\turl: process.env.NODE_ENV === \"development\" ? url + queryParams : `https://cors.bridged.cc/http://openapi.data.go.kr${url + queryParams}`,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tresponse: {\r\n\t\t\t\t\t\tbody: {\r\n\t\t\t\t\t\t\titems: { item },\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t} = response;\r\n\t\t\treturn item;\r\n\t\t})\r\n\t\t.catch((error) => console.log(error));\r\n};\r\n\r\nexport const createPromiseThunk = (type: string) => {\r\n\tlet name: string = \"\";\r\n\tswitch (type) {\r\n\t\tcase \"OVERSEAS\":\r\n\t\t\tname = \"해외발생 현황\";\r\n\t\t\tbreak;\r\n\t\tcase \"SIDOINFO\":\r\n\t\t\tname = \"시·도발생 현황\";\r\n\t\t\tbreak;\r\n\t\tcase \"COVID19INFO\":\r\n\t\t\tname = \"감염 현황\";\r\n\t\t\tbreak;\r\n\t\tcase \"GENAGECASEINFO\":\r\n\t\t\tname = \"연령별·성별감염 현황\";\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n\r\n\treturn ({ url, setLoadingState }: { url: string; setLoadingState: any }) =>\r\n\t\tasync (dispatch: any): Promise<void> => {\r\n\t\t\ttry {\r\n\t\t\t\tconst payload = await fetchAPI(url);\r\n\t\t\t\tdispatch({ type: `${type}_SUCCESS`, payload });\r\n\t\t\t\tsetLoadingState(false);\r\n\t\t\t\tconsole.log(`${name}: ${type}`, payload);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t};\r\n};\r\n","import { createPromiseThunk } from \"../asyncGetData\";\r\n\r\nconst COVID19INFO = \"COVID19INFO\";\r\nconst COVID19INFO_PENDING = \"COVID19INFO_PENDING\";\r\nconst COVID19INFO_SUCCESS = \"COVID19INFO_SUCCESS\";\r\n\r\nexport const covid19InfoDispatch: any = createPromiseThunk(COVID19INFO);\r\n\r\nexport type covid19InfoTypes = {\r\n\taccDefRate: number;\r\n\taccExamCnt: number;\r\n\taccExamCompCnt: number;\r\n\tcareCnt: number;\r\n\tclearCnt: number;\r\n\tcreateDt: string;\r\n\tdeathCnt: number;\r\n\tdecideCnt: number;\r\n\texamCnt: number;\r\n\tresutlNegCnt: number;\r\n\tseq: number;\r\n\tstateDt: number;\r\n\tstateTime: string;\r\n\tupdateDt: string;\r\n}[];\r\n\r\nconst initialState: covid19InfoTypes = [\r\n\t{\r\n\t\taccDefRate: 0,\r\n\t\taccExamCnt: 0,\r\n\t\taccExamCompCnt: 0,\r\n\t\tcareCnt: 0,\r\n\t\tclearCnt: 0,\r\n\t\tcreateDt: \"\",\r\n\t\tdeathCnt: 0,\r\n\t\tdecideCnt: 0,\r\n\t\texamCnt: 0,\r\n\t\tresutlNegCnt: 0,\r\n\t\tseq: 0,\r\n\t\tstateDt: 0,\r\n\t\tstateTime: \"\",\r\n\t\tupdateDt: \"\",\r\n\t},\r\n];\r\n\r\nconst covid19InfoData = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase COVID19INFO_PENDING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t};\r\n\t\tcase COVID19INFO_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default covid19InfoData;\r\n","import React from \"react\";\r\nimport { Flex, Spinner } from \"@chakra-ui/react\";\r\n\r\nconst SpinnerBox = () => {\r\n\treturn (\r\n\t\t<Flex justifyContent=\"center\" alignItems=\"center\" position=\"fixed\" left=\"0\" right=\"0\" top=\"0\" bottom=\"0\" background=\"gray.500\" opacity=\"0.7\">\r\n\t\t\t<Spinner thickness=\"4px\" speed=\"0.65s\" emptyColor=\"gray.200\" color=\"red.500\" size=\"xl\" />\r\n\t\t</Flex>\r\n\t);\r\n};\r\n\r\nexport default SpinnerBox;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Flex, Table, Thead, Tbody, Tr, Th, Td, TableCaption, Heading } from \"@chakra-ui/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../Layout\";\r\nimport moment from \"moment\";\r\nimport CovidTotalState from \"../chart/CovidTotalState\";\r\nimport { covid19InfoDispatch } from \"../../redux/covid19InfooReducer\";\r\nimport SpinnerBox from \"../SpinnerBox\";\r\n\r\nconst Covid19State = () => {\r\n\tconst { covid19InfooReducer } = useSelector((state: any) => ({\r\n\t\tcovid19InfooReducer: state.covid19InfooReducer.data,\r\n\t}));\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst setLoadingState = (state: boolean) => {\r\n\t\tsetIsLoading(state);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// 코로나19 감염 현황\r\n\t\tdispatch(\r\n\t\t\tcovid19InfoDispatch({\r\n\t\t\t\turl: \"/openapi/service/rest/Covid19/getCovid19InfStateJson\",\r\n\t\t\t\tsetLoadingState,\r\n\t\t\t})\r\n\t\t);\r\n\t}, []);\r\n\r\n\t// stateDt기준 데이터정렬 가공\r\n\tconst DECIDE_CNT_TODAY =\r\n\t\tcovid19InfooReducer &&\r\n\t\tcovid19InfooReducer\r\n\t\t\t.map((item: any) => item)\r\n\t\t\t.sort((a: any, b: any) => a.stateDt - b.stateDt)\r\n\t\t\t.slice(-15)\r\n\t\t\t.reverse();\r\n\r\n\t// 오늘확진자 수\r\n\tconst CONFIRMED_CASE = DECIDE_CNT_TODAY?.find((item: { stateDt: number }) => item.stateDt.toString() === moment(new Date()).format(\"YYYYMMDD\"));\r\n\tconst YESTERDAY_CONFIRMED_CASE = DECIDE_CNT_TODAY?.find((item: { stateDt: number }) => item.stateDt.toString() === (Number(moment(new Date()).format(\"YYYYMMDD\")) - 1).toString());\r\n\tconst TODAY_CONFIRMED_CASE = CONFIRMED_CASE?.decideCnt - YESTERDAY_CONFIRMED_CASE?.decideCnt;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading && <SpinnerBox />}\r\n\t\t\t{!isLoading && (\r\n\t\t\t\t<Layout title=\"공공데이터활용지원센터_보건복지부 코로나19 감염 현황\">\r\n\t\t\t\t\t<CovidTotalState covid19InfooReducer={covid19InfooReducer && covid19InfooReducer} />\r\n\t\t\t\t\t<Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\r\n\t\t\t\t\t\t<Heading size=\"md\" mb={4}>\r\n\t\t\t\t\t\t\t누적 데이터\r\n\t\t\t\t\t\t</Heading>\r\n\t\t\t\t\t\t<Table variant=\"striped\" size=\"sm\" flex=\"1\">\r\n\t\t\t\t\t\t\t<TableCaption fontSize=\"md\">{isNaN(TODAY_CONFIRMED_CASE) ? \"10시 이후 오늘의 확진자 수 확인 가능합니다.\" : `오늘 확진자 수 : ${TODAY_CONFIRMED_CASE.toLocaleString()}명`}</TableCaption>\r\n\t\t\t\t\t\t\t<Thead>\r\n\t\t\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t\t\t<Th>기준일</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>확진자 수</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>격리해제 수</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>치료중 환자 수</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>사망자 수</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>확진률</Th>\r\n\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t</Thead>\r\n\t\t\t\t\t\t\t<Tbody>\r\n\t\t\t\t\t\t\t\t{DECIDE_CNT_TODAY &&\r\n\t\t\t\t\t\t\t\t\tDECIDE_CNT_TODAY.map((item: any) => (\r\n\t\t\t\t\t\t\t\t\t\t<Tr key={item.stateDt}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{moment(item.stateDt.toString()).format(\"YYYY-MM-DD\")}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{item.decideCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{item.clearCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{item.careCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{item.deathCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{Number(item.accDefRate).toFixed(2)}</Td>\r\n\t\t\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Layout>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Covid19State;\r\n","import React from \"react\";\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport { Box, Grid } from \"@chakra-ui/react\";\r\n\r\nconst SidoInfoStateChart = ({ DEF_CNT, GUBUN }: any) => {\r\n\ttype itemTypes = {\r\n\t\tcreateDt: string;\r\n\t\tdeathCnt: number;\r\n\t\tdefCnt: number;\r\n\t\tgubun: string;\r\n\t\tgubunCn: string;\r\n\t\tgubunEn: string;\r\n\t\tincDec: number;\r\n\t\tisolClearCnt: number;\r\n\t\tisolIngCnt: number;\r\n\t\tlocalOccCnt: number;\r\n\t\toverFlowCnt: number;\r\n\t\tqurRate: string;\r\n\t\tseq: number;\r\n\t\tstdDay: string;\r\n\t};\r\n\r\n\t// Random Color\r\n\tlet colorArray: string[] = [];\r\n\tconst randomColor = () => Math.floor(Math.random() * 255);\r\n\tconst setRgbaColor = (count: number) => {\r\n\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\tcolorArray.push(`rgba(${randomColor()},${randomColor()},${randomColor()}, 0.7)`);\r\n\t\t}\r\n\t};\r\n\tsetRgbaColor(DEF_CNT?.length);\r\n\tconsole.log(colorArray);\r\n\r\n\ttype dataTypes = {\r\n\t\tlabels: string[];\r\n\t\tdatasets: {\r\n\t\t\tlabel: string[] | string;\r\n\t\t\tdata: number[];\r\n\t\t\tbackgroundColor: string[];\r\n\t\t\tborderWidth: number;\r\n\t\t}[];\r\n\t};\r\n\r\n\tconst data: dataTypes = {\r\n\t\tlabels: GUBUN,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: GUBUN,\r\n\t\t\t\tdata: DEF_CNT?.filter((filItem: itemTypes) => filItem.gubun !== \"합계\").map((item: itemTypes) => item.defCnt),\r\n\t\t\t\tbackgroundColor: colorArray,\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tmaintainAspectRatio: false,\r\n\t};\r\n\r\n\tconst barData: dataTypes = {\r\n\t\tlabels: GUBUN,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"지역별 현황\",\r\n\t\t\t\tdata: DEF_CNT?.filter((filItem: itemTypes) => filItem.gubun !== \"합계\").map((item: itemTypes) => item.defCnt),\r\n\t\t\t\tbackgroundColor: colorArray,\r\n\t\t\t\tborderWidth: 1,\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst barOptions = {\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false, // label 숨기기\r\n\t\t\t},\r\n\t\t},\r\n\t\tmaintainAspectRatio: false,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid templateRows=\"repeat(2,1fr)\" w=\"100%\" h=\"100%\">\r\n\t\t\t<Box p={4}>\r\n\t\t\t\t<Doughnut data={data} options={options} />\r\n\t\t\t</Box>\r\n\t\t\t<Box p={4}>\r\n\t\t\t\t<Bar data={barData} options={barOptions} />\r\n\t\t\t</Box>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default SidoInfoStateChart;\r\n","import { createPromiseThunk } from \"../asyncGetData\";\r\n\r\nconst SIDOINFO = \"SIDOINFO\";\r\nconst SIDOINFO_SUCCESS = \"SIDOINFO_SUCCESS\";\r\n\r\nexport const sidoInfoDispatch: any = createPromiseThunk(SIDOINFO);\r\n\r\ntype sidoDataTypes = {};\r\n\r\nconst initialState = {\r\n\tdata: null,\r\n};\r\n\r\nconst getSIDOINFOData = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase SIDOINFO_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default getSIDOINFOData;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Flex, Table, Thead, Tbody, Tr, Th, Td, TableCaption, Heading, Box } from \"@chakra-ui/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../Layout\";\r\nimport moment from \"moment\";\r\nimport SidoInfoStateChart from \"../chart/SidoInfoStateChart\";\r\nimport { sidoInfoDispatch } from \"../../redux/sidoInfoReducer\";\r\nimport SpinnerBox from \"../SpinnerBox\";\r\n\r\nconst Covid19State = () => {\r\n\tconst { sidoInfoReducer } = useSelector((state: any) => ({ sidoInfoReducer: state.sidoInfoReducer.data }));\r\n\r\n\ttype itemTypes = {\r\n\t\tcreateDt: string;\r\n\t\tdeathCnt: number;\r\n\t\tdefCnt: number;\r\n\t\tgubun: string;\r\n\t\tgubunCn: string;\r\n\t\tgubunEn: string;\r\n\t\tincDec: number;\r\n\t\tisolClearCnt: number;\r\n\t\tisolIngCnt: number;\r\n\t\tlocalOccCnt: number;\r\n\t\toverFlowCnt: number;\r\n\t\tqurRate: string;\r\n\t\tseq: number;\r\n\t\tstdDay: string;\r\n\t};\r\n\r\n\tconst DEF_CNT = sidoInfoReducer\r\n\t\t?.map((item: itemTypes) => item)\r\n\t\t.sort((a: any, b: any) => Number(moment(a.createDt).format(\"YYYYMMDD\")) - Number(moment(b.createDt).format(\"YYYYMMDD\")))\r\n\t\t.slice(-18);\r\n\r\n\t// 도시명\r\n\tconst GUBUN = DEF_CNT?.filter((filItem: itemTypes) => filItem.gubun !== \"합계\").map((item: itemTypes) => item.gubun);\r\n\r\n\t// 기준날짜\r\n\tconst currentDay = DEF_CNT?.find((day: { createDt: string }) => moment(day.createDt).format(\"YYYYMMDD\"));\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst setLoadingState = (state: boolean) => {\r\n\t\tsetIsLoading(state);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// 코로나19 시·도발생 현황\r\n\t\tdispatch(\r\n\t\t\tsidoInfoDispatch({\r\n\t\t\t\turl: \"/openapi/service/rest/Covid19/getCovid19SidoInfStateJson\",\r\n\t\t\t\tsetLoadingState,\r\n\t\t\t})\r\n\t\t);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading && <SpinnerBox />}\r\n\t\t\t{!isLoading && (\r\n\t\t\t\t<Layout title=\"공공데이터활용지원센터_보건복지부 코로나19 시·도발생 현황\">\r\n\t\t\t\t\t<SidoInfoStateChart DEF_CNT={DEF_CNT} GUBUN={GUBUN} isLoading={isLoading} sidoInfoReducer={sidoInfoReducer && sidoInfoReducer} />\r\n\t\t\t\t\t<Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\r\n\t\t\t\t\t\t<Heading size=\"md\" mb={4}>\r\n\t\t\t\t\t\t\t시·도발생 현황\r\n\t\t\t\t\t\t</Heading>\r\n\r\n\t\t\t\t\t\t<Table variant=\"striped\" size=\"sm\" w=\"100%\" h=\"100%\" flex=\"1\">\r\n\t\t\t\t\t\t\t<TableCaption fontSize=\"md\">{`${moment(currentDay?.createDt).format(\"YYYY-MM-DD\")}`}</TableCaption>\r\n\t\t\t\t\t\t\t<Thead>\r\n\t\t\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t\t\t<Th>도시명</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>확진자 수</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>격리중 환자수</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>격리 해제 수</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>전일대비 증감 수</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>해외유입 수</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>지역발생 수</Th>\r\n\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t</Thead>\r\n\t\t\t\t\t\t\t<Tbody>\r\n\t\t\t\t\t\t\t\t{DEF_CNT?.map((city: itemTypes) => (\r\n\t\t\t\t\t\t\t\t\t<Tr key={city.gubun}>\r\n\t\t\t\t\t\t\t\t\t\t<Td>{city.gubun.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t<Td>{city.defCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t<Td>{city.isolIngCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t<Td>{city.isolClearCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t<Td>{city.incDec.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t<Td>{city.overFlowCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t<Td>{city.localOccCnt.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Layout>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Covid19State;\r\n","import { Box, Grid } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nconst GenAgeCaseInfoChart = ({ CREACT_DT }: any) => {\r\n\tconst CONF_CASE = CREACT_DT.map((conf: { confCase: number }) => conf.confCase);\r\n\tconst CONF_CASE_RATE = CREACT_DT.map((conf: { confCaseRate: number }) => conf.confCaseRate);\r\n\tconst GUBUN = CREACT_DT.map((ctg: { gubun: string }) => ctg.gubun);\r\n\r\n\tconst data = {\r\n\t\tlabels: GUBUN,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"확진자\",\r\n\t\t\t\tdata: CONF_CASE,\r\n\t\t\t\tbackgroundColor: [\"rgb(255, 99, 132)\", \"rgb(75, 192, 192)\", \"rgb(255, 205, 86)\", \"rgb(201, 203, 207)\", \"rgb(54, 162, 235)\"],\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\tconst options = {\r\n\t\tindexAxis: \"y\",\r\n\t\tplugins: {\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\t// maintainAspectRatio: false,\r\n\t};\r\n\r\n\tconst lineData = {\r\n\t\tlabels: GUBUN,\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"확진률\",\r\n\t\t\t\tdata: CONF_CASE_RATE,\r\n\t\t\t\tbackgroundColor: [\"rgb(255, 99, 132)\", \"rgb(75, 192, 192)\", \"rgb(255, 205, 86)\", \"rgb(201, 203, 207)\", \"rgb(54, 162, 235)\"],\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid templateRows=\"repeat(2,1fr)\" w=\"100%\" h=\"100%\">\r\n\t\t\t<Box p={4}>\r\n\t\t\t\t<Bar data={data} options={options} />\r\n\t\t\t</Box>\r\n\t\t\t<Box p={4}>\r\n\t\t\t\t<Line data={lineData} options={options} />\r\n\t\t\t</Box>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default GenAgeCaseInfoChart;\r\n","import { createPromiseThunk } from \"../asyncGetData\";\r\n\r\nconst GENAGECASEINFO = \"GENAGECASEINFO\";\r\nconst GENAGECASEINFO_SUCCESS = \"GENAGECASEINFO_SUCCESS\";\r\n\r\nexport const genAgeCaseInfoDispatch: any = createPromiseThunk(GENAGECASEINFO);\r\n\r\nconst initialState = {\r\n\tdata: null,\r\n};\r\n\r\nconst genAgeCaseInfoData = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase GENAGECASEINFO_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default genAgeCaseInfoData;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Flex, Table, Thead, Tbody, Tr, Th, Td, TableCaption } from \"@chakra-ui/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport GenAgeCaseInfoChart from \"../chart/GenAgeCaseInfoChart\";\r\nimport Layout from \"../Layout\";\r\nimport SpinnerBox from \"../SpinnerBox\";\r\nimport { genAgeCaseInfoDispatch } from \"../../redux/genAgeCaseInfoReducer\";\r\nimport moment from \"moment\";\r\n\r\nconst GenAgeCaseInfo = () => {\r\n\tconst { genAgeCaseInfoReducer } = useSelector((state: any) => ({ genAgeCaseInfoReducer: state.genAgeCaseInfoReducer.data }));\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst setLoadingState = (state: boolean) => {\r\n\t\tsetIsLoading(state);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// 코로나19 연령별·성별감염 현황\r\n\t\tdispatch(\r\n\t\t\tgenAgeCaseInfoDispatch({\r\n\t\t\t\turl: \"/openapi/service/rest/Covid19/getCovid19GenAgeCaseInfJson\",\r\n\t\t\t\tsetLoadingState,\r\n\t\t\t})\r\n\t\t);\r\n\t}, []);\r\n\r\n\ttype genAgeTypes = {\r\n\t\tconfCase: number;\r\n\t\tconfCaseRate: number;\r\n\t\tcreateDt: string;\r\n\t\tcriticalRate: number;\r\n\t\tdeath: number;\r\n\t\tdeathRate: number;\r\n\t\tgubun: string;\r\n\t\tseq: number;\r\n\t};\r\n\r\n\tconst CREACT_DT =\r\n\t\tgenAgeCaseInfoReducer &&\r\n\t\tgenAgeCaseInfoReducer\r\n\t\t\t.map((date: genAgeTypes) => date)\r\n\t\t\t.sort((a: genAgeTypes, b: genAgeTypes) => Number(moment(a.createDt).format(\"YYYYMMDD\")) - Number(moment(b.createDt).format(\"YYYYMMDD\")))\r\n\t\t\t.slice(-11);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading && <SpinnerBox />}\r\n\t\t\t{!isLoading && (\r\n\t\t\t\t<Layout title=\"공공데이터활용지원센터_보건복지부 코로나19 연령별·성별감염 현황\">\r\n\t\t\t\t\t<GenAgeCaseInfoChart genAgeCaseInfoReducer={genAgeCaseInfoReducer && genAgeCaseInfoReducer} CREACT_DT={CREACT_DT} />\r\n\t\t\t\t\t<Flex flexDirection=\"column\" w=\"100%\" h=\"100%\">\r\n\t\t\t\t\t\t<Table variant=\"striped\" size=\"sm\" flex=\"1\">\r\n\t\t\t\t\t\t\t<TableCaption fontSize=\"md\"></TableCaption>\r\n\t\t\t\t\t\t\t<Thead>\r\n\t\t\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t\t\t<Th>구분(성별, 연령별)</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>확진자</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>확진률</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>사망자</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>사망률</Th>\r\n\t\t\t\t\t\t\t\t\t<Th>치명률</Th>\r\n\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t</Thead>\r\n\t\t\t\t\t\t\t<Tbody>\r\n\t\t\t\t\t\t\t\t{CREACT_DT?.map((genAge: genAgeTypes) => {\r\n\t\t\t\t\t\t\t\t\tconst { gubun, confCase, confCaseRate, death, deathRate, criticalRate } = genAge;\r\n\t\t\t\t\t\t\t\t\tconst genAgeType = gubun.indexOf(\"남성\") > -1 || gubun.indexOf(\"여성\") > -1 || gubun.indexOf(\"80 이상\") > -1 ? gubun : `${gubun}세`;\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Tr key={gubun}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{genAgeType}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{confCase.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{confCaseRate.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{death.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{deathRate.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Td>{criticalRate.toLocaleString()}</Td>\r\n\t\t\t\t\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</Layout>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GenAgeCaseInfo;\r\n","import * as React from \"react\";\r\nimport { ChakraProvider, Flex, theme } from \"@chakra-ui/react\";\r\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\r\nimport Header from \"./component/Header\";\r\nimport Footer from \"./component/Footer\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport Covid19State from \"./component/pages/Covid19State\";\r\nimport SidoInfoState from \"./component/pages/SidoInfoState\";\r\nimport GenAgeCaseInfo from \"./component/pages/GenAgeCaseInfo\";\r\n\r\nexport const App = () => {\r\n\treturn (\r\n\t\t<ChakraProvider theme={theme}>\r\n\t\t\t<Flex flexDirection=\"column\" w=\"100vw\" h=\"100vh\">\r\n\t\t\t\t<Flex justifyContent=\"space-between\" alignItems=\"center\" px={4} borderBottomWidth=\"1px\" borderColor=\"gray.200\" boxShadow=\"md\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<ColorModeSwitcher />\r\n\t\t\t\t</Flex>\r\n\r\n\t\t\t\t<Route path=\"/\" exact component={Covid19State} />\r\n\t\t\t\t<Route path=\"/SidoInfoState\" component={SidoInfoState} />\r\n\t\t\t\t<Route path=\"/GenAgeCaseInfo\" component={GenAgeCaseInfo} />\r\n\r\n\t\t\t\t<Footer />\r\n\t\t\t</Flex>\r\n\t\t</ChakraProvider>\r\n\t);\r\n};\r\n","import { createPromiseThunk } from \"../asyncGetData\";\r\n\r\nconst OVERSEAS = \"OVERSEAS\";\r\nconst OVERSEAS_SUCCESS = \"OVERSEAS_SUCCESS\";\r\n\r\nexport const overseasDispatch: any = createPromiseThunk(OVERSEAS);\r\n\r\nconst initialState = {\r\n\tdata: null,\r\n};\r\n\r\nconst getOverseasData = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase OVERSEAS_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default getOverseasData;\r\n","import { combineReducers } from \"redux\";\r\nimport overseasReducer from \"./overseasReducer\"; // 코로나19해외발생 현황 상세설명\r\nimport sidoInfoReducer from \"./sidoInfoReducer\"; // 코로나19 시·도발생 현황\r\nimport genAgeCaseInfoReducer from \"./genAgeCaseInfoReducer\"; // 코로나19 연령별·성별감염 현황\r\nimport covid19InfooReducer from \"./covid19InfooReducer\"; // 코로나19 감염 현황\r\nconst RootReducer = combineReducers({ overseasReducer, sidoInfoReducer, genAgeCaseInfoReducer, covid19InfooReducer });\r\n\r\nexport default RootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport RootReducer from \"./reducers\";\r\n\r\nconst store = createStore(RootReducer, applyMiddleware(ReduxThunk));\r\n\r\nexport default store;\r\n","import { ColorModeScript } from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport store from \"./redux/\";\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<ColorModeScript />\r\n\t\t<Provider store={store}>\r\n\t\t\t{process.env.NODE_ENV === \"development\" && (\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<App />\r\n\t\t\t\t</BrowserRouter>\r\n\t\t\t)}\r\n\t\t\t{process.env.NODE_ENV === \"production\" && (\r\n\t\t\t\t<HashRouter>\r\n\t\t\t\t\t<App />\r\n\t\t\t\t</HashRouter>\r\n\t\t\t)}\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}